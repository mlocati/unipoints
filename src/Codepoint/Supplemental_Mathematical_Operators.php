<?php

/*
 * Please DO NOT edit this file manually!
 * It has been generated automatically by MLUnipoints\Build\CodepointsBuilder
 */

declare(strict_types=1);

namespace MLUnipoints\Codepoint;

use MLUnipoints\Category as Cat;
use MLUnipoints\Info\CodepointInfo as Info;
use MLUnipoints\Info\UnicodeInfo;

#[UnicodeInfo(unicodeVersion: '16.0.0')]
enum Supplemental_Mathematical_Operators: string
{
    #[Info(id: 0x2A00, name: 'N-ARY CIRCLED DOT OPERATOR', category: Cat::Math_Symbol)]
    case N_ARY_CIRCLED_DOT_OPERATOR = "\u{2A00}";

    #[Info(id: 0x2A01, name: 'N-ARY CIRCLED PLUS OPERATOR', category: Cat::Math_Symbol)]
    case N_ARY_CIRCLED_PLUS_OPERATOR = "\u{2A01}";

    #[Info(id: 0x2A02, name: 'N-ARY CIRCLED TIMES OPERATOR', category: Cat::Math_Symbol)]
    case N_ARY_CIRCLED_TIMES_OPERATOR = "\u{2A02}";

    #[Info(id: 0x2A03, name: 'N-ARY UNION OPERATOR WITH DOT', category: Cat::Math_Symbol)]
    case N_ARY_UNION_OPERATOR_WITH_DOT = "\u{2A03}";

    #[Info(id: 0x2A04, name: 'N-ARY UNION OPERATOR WITH PLUS', category: Cat::Math_Symbol)]
    case N_ARY_UNION_OPERATOR_WITH_PLUS = "\u{2A04}";

    #[Info(id: 0x2A05, name: 'N-ARY SQUARE INTERSECTION OPERATOR', category: Cat::Math_Symbol)]
    case N_ARY_SQUARE_INTERSECTION_OPERATOR = "\u{2A05}";

    #[Info(id: 0x2A06, name: 'N-ARY SQUARE UNION OPERATOR', category: Cat::Math_Symbol)]
    case N_ARY_SQUARE_UNION_OPERATOR = "\u{2A06}";

    #[Info(id: 0x2A07, name: 'TWO LOGICAL AND OPERATOR', category: Cat::Math_Symbol, informativeAliases: ['merge'])]
    case TWO_LOGICAL_AND_OPERATOR = "\u{2A07}";

    #[Info(id: 0x2A08, name: 'TWO LOGICAL OR OPERATOR', category: Cat::Math_Symbol)]
    case TWO_LOGICAL_OR_OPERATOR = "\u{2A08}";

    #[Info(id: 0x2A09, name: 'N-ARY TIMES OPERATOR', category: Cat::Math_Symbol)]
    case N_ARY_TIMES_OPERATOR = "\u{2A09}";

    #[Info(id: 0x2A0A, name: 'MODULO TWO SUM', category: Cat::Math_Symbol)]
    case MODULO_TWO_SUM = "\u{2A0A}";

    #[Info(id: 0x2A0B, name: 'SUMMATION WITH INTEGRAL', category: Cat::Math_Symbol)]
    case SUMMATION_WITH_INTEGRAL = "\u{2A0B}";

    #[Info(id: 0x2A0C, name: 'QUADRUPLE INTEGRAL OPERATOR', category: Cat::Math_Symbol)]
    case QUADRUPLE_INTEGRAL_OPERATOR = "\u{2A0C}";

    #[Info(id: 0x2A0D, name: 'FINITE PART INTEGRAL', category: Cat::Math_Symbol)]
    case FINITE_PART_INTEGRAL = "\u{2A0D}";

    #[Info(id: 0x2A0E, name: 'INTEGRAL WITH DOUBLE STROKE', category: Cat::Math_Symbol)]
    case INTEGRAL_WITH_DOUBLE_STROKE = "\u{2A0E}";

    #[Info(id: 0x2A0F, name: 'INTEGRAL AVERAGE WITH SLASH', category: Cat::Math_Symbol)]
    case INTEGRAL_AVERAGE_WITH_SLASH = "\u{2A0F}";

    #[Info(id: 0x2A10, name: 'CIRCULATION FUNCTION', category: Cat::Math_Symbol)]
    case CIRCULATION_FUNCTION = "\u{2A10}";

    #[Info(id: 0x2A11, name: 'ANTICLOCKWISE INTEGRATION', category: Cat::Math_Symbol)]
    case ANTICLOCKWISE_INTEGRATION = "\u{2A11}";

    #[Info(id: 0x2A12, name: 'LINE INTEGRATION WITH RECTANGULAR PATH AROUND POLE', category: Cat::Math_Symbol)]
    case LINE_INTEGRATION_WITH_RECTANGULAR_PATH_AROUND_POLE = "\u{2A12}";

    #[Info(id: 0x2A13, name: 'LINE INTEGRATION WITH SEMICIRCULAR PATH AROUND POLE', category: Cat::Math_Symbol)]
    case LINE_INTEGRATION_WITH_SEMICIRCULAR_PATH_AROUND_POLE = "\u{2A13}";

    #[Info(id: 0x2A14, name: 'LINE INTEGRATION NOT INCLUDING THE POLE', category: Cat::Math_Symbol)]
    case LINE_INTEGRATION_NOT_INCLUDING_THE_POLE = "\u{2A14}";

    #[Info(id: 0x2A15, name: 'INTEGRAL AROUND A POINT OPERATOR', category: Cat::Math_Symbol)]
    case INTEGRAL_AROUND_A_POINT_OPERATOR = "\u{2A15}";

    #[Info(id: 0x2A16, name: 'QUATERNION INTEGRAL OPERATOR', category: Cat::Math_Symbol)]
    case QUATERNION_INTEGRAL_OPERATOR = "\u{2A16}";

    #[Info(id: 0x2A17, name: 'INTEGRAL WITH LEFTWARDS ARROW WITH HOOK', category: Cat::Math_Symbol)]
    case INTEGRAL_WITH_LEFTWARDS_ARROW_WITH_HOOK = "\u{2A17}";

    #[Info(id: 0x2A18, name: 'INTEGRAL WITH TIMES SIGN', category: Cat::Math_Symbol)]
    case INTEGRAL_WITH_TIMES_SIGN = "\u{2A18}";

    #[Info(id: 0x2A19, name: 'INTEGRAL WITH INTERSECTION', category: Cat::Math_Symbol)]
    case INTEGRAL_WITH_INTERSECTION = "\u{2A19}";

    #[Info(id: 0x2A1A, name: 'INTEGRAL WITH UNION', category: Cat::Math_Symbol)]
    case INTEGRAL_WITH_UNION = "\u{2A1A}";

    #[Info(id: 0x2A1B, name: 'INTEGRAL WITH OVERBAR', category: Cat::Math_Symbol, informativeAliases: ['upper integral'])]
    case INTEGRAL_WITH_OVERBAR = "\u{2A1B}";

    #[Info(id: 0x2A1C, name: 'INTEGRAL WITH UNDERBAR', category: Cat::Math_Symbol, informativeAliases: ['lower integral'])]
    case INTEGRAL_WITH_UNDERBAR = "\u{2A1C}";

    #[Info(id: 0x2A1D, name: 'JOIN', category: Cat::Math_Symbol, informativeAliases: ['large bowtie'])]
    case JOIN = "\u{2A1D}";

    #[Info(id: 0x2A1E, name: 'LARGE LEFT TRIANGLE OPERATOR', category: Cat::Math_Symbol)]
    case LARGE_LEFT_TRIANGLE_OPERATOR = "\u{2A1E}";

    #[Info(id: 0x2A1F, name: 'Z NOTATION SCHEMA COMPOSITION', category: Cat::Math_Symbol)]
    case Z_NOTATION_SCHEMA_COMPOSITION = "\u{2A1F}";

    #[Info(id: 0x2A20, name: 'Z NOTATION SCHEMA PIPING', category: Cat::Math_Symbol)]
    case Z_NOTATION_SCHEMA_PIPING = "\u{2A20}";

    #[Info(id: 0x2A21, name: 'Z NOTATION SCHEMA PROJECTION', category: Cat::Math_Symbol)]
    case Z_NOTATION_SCHEMA_PROJECTION = "\u{2A21}";

    #[Info(id: 0x2A22, name: 'PLUS SIGN WITH SMALL CIRCLE ABOVE', category: Cat::Math_Symbol)]
    case PLUS_SIGN_WITH_SMALL_CIRCLE_ABOVE = "\u{2A22}";

    #[Info(id: 0x2A23, name: 'PLUS SIGN WITH CIRCUMFLEX ACCENT ABOVE', category: Cat::Math_Symbol)]
    case PLUS_SIGN_WITH_CIRCUMFLEX_ACCENT_ABOVE = "\u{2A23}";

    #[Info(id: 0x2A24, name: 'PLUS SIGN WITH TILDE ABOVE', category: Cat::Math_Symbol, informativeAliases: ['positive difference or sum'])]
    case PLUS_SIGN_WITH_TILDE_ABOVE = "\u{2A24}";

    #[Info(id: 0x2A25, name: 'PLUS SIGN WITH DOT BELOW', category: Cat::Math_Symbol)]
    case PLUS_SIGN_WITH_DOT_BELOW = "\u{2A25}";

    #[Info(id: 0x2A26, name: 'PLUS SIGN WITH TILDE BELOW', category: Cat::Math_Symbol, informativeAliases: ['sum or positive difference'])]
    case PLUS_SIGN_WITH_TILDE_BELOW = "\u{2A26}";

    #[Info(id: 0x2A27, name: 'PLUS SIGN WITH SUBSCRIPT TWO', category: Cat::Math_Symbol, informativeAliases: ['nim-addition'])]
    case PLUS_SIGN_WITH_SUBSCRIPT_TWO = "\u{2A27}";

    #[Info(id: 0x2A28, name: 'PLUS SIGN WITH BLACK TRIANGLE', category: Cat::Math_Symbol)]
    case PLUS_SIGN_WITH_BLACK_TRIANGLE = "\u{2A28}";

    #[Info(id: 0x2A29, name: 'MINUS SIGN WITH COMMA ABOVE', category: Cat::Math_Symbol)]
    case MINUS_SIGN_WITH_COMMA_ABOVE = "\u{2A29}";

    #[Info(id: 0x2A2A, name: 'MINUS SIGN WITH DOT BELOW', category: Cat::Math_Symbol)]
    case MINUS_SIGN_WITH_DOT_BELOW = "\u{2A2A}";

    #[Info(id: 0x2A2B, name: 'MINUS SIGN WITH FALLING DOTS', category: Cat::Math_Symbol)]
    case MINUS_SIGN_WITH_FALLING_DOTS = "\u{2A2B}";

    #[Info(id: 0x2A2C, name: 'MINUS SIGN WITH RISING DOTS', category: Cat::Math_Symbol)]
    case MINUS_SIGN_WITH_RISING_DOTS = "\u{2A2C}";

    #[Info(id: 0x2A2D, name: 'PLUS SIGN IN LEFT HALF CIRCLE', category: Cat::Math_Symbol)]
    case PLUS_SIGN_IN_LEFT_HALF_CIRCLE = "\u{2A2D}";

    #[Info(id: 0x2A2E, name: 'PLUS SIGN IN RIGHT HALF CIRCLE', category: Cat::Math_Symbol)]
    case PLUS_SIGN_IN_RIGHT_HALF_CIRCLE = "\u{2A2E}";

    #[Info(id: 0x2A2F, name: 'VECTOR OR CROSS PRODUCT', category: Cat::Math_Symbol)]
    case VECTOR_OR_CROSS_PRODUCT = "\u{2A2F}";

    #[Info(id: 0x2A30, name: 'MULTIPLICATION SIGN WITH DOT ABOVE', category: Cat::Math_Symbol)]
    case MULTIPLICATION_SIGN_WITH_DOT_ABOVE = "\u{2A30}";

    #[Info(id: 0x2A31, name: 'MULTIPLICATION SIGN WITH UNDERBAR', category: Cat::Math_Symbol)]
    case MULTIPLICATION_SIGN_WITH_UNDERBAR = "\u{2A31}";

    #[Info(id: 0x2A32, name: 'SEMIDIRECT PRODUCT WITH BOTTOM CLOSED', category: Cat::Math_Symbol)]
    case SEMIDIRECT_PRODUCT_WITH_BOTTOM_CLOSED = "\u{2A32}";

    #[Info(id: 0x2A33, name: 'SMASH PRODUCT', category: Cat::Math_Symbol)]
    case SMASH_PRODUCT = "\u{2A33}";

    #[Info(id: 0x2A34, name: 'MULTIPLICATION SIGN IN LEFT HALF CIRCLE', category: Cat::Math_Symbol)]
    case MULTIPLICATION_SIGN_IN_LEFT_HALF_CIRCLE = "\u{2A34}";

    #[Info(id: 0x2A35, name: 'MULTIPLICATION SIGN IN RIGHT HALF CIRCLE', category: Cat::Math_Symbol)]
    case MULTIPLICATION_SIGN_IN_RIGHT_HALF_CIRCLE = "\u{2A35}";

    #[Info(id: 0x2A36, name: 'CIRCLED MULTIPLICATION SIGN WITH CIRCUMFLEX ACCENT', category: Cat::Math_Symbol)]
    case CIRCLED_MULTIPLICATION_SIGN_WITH_CIRCUMFLEX_ACCENT = "\u{2A36}";

    #[Info(id: 0x2A37, name: 'MULTIPLICATION SIGN IN DOUBLE CIRCLE', category: Cat::Math_Symbol)]
    case MULTIPLICATION_SIGN_IN_DOUBLE_CIRCLE = "\u{2A37}";

    #[Info(id: 0x2A38, name: 'CIRCLED DIVISION SIGN', category: Cat::Math_Symbol)]
    case CIRCLED_DIVISION_SIGN = "\u{2A38}";

    #[Info(id: 0x2A39, name: 'PLUS SIGN IN TRIANGLE', category: Cat::Math_Symbol)]
    case PLUS_SIGN_IN_TRIANGLE = "\u{2A39}";

    #[Info(id: 0x2A3A, name: 'MINUS SIGN IN TRIANGLE', category: Cat::Math_Symbol)]
    case MINUS_SIGN_IN_TRIANGLE = "\u{2A3A}";

    #[Info(id: 0x2A3B, name: 'MULTIPLICATION SIGN IN TRIANGLE', category: Cat::Math_Symbol)]
    case MULTIPLICATION_SIGN_IN_TRIANGLE = "\u{2A3B}";

    #[Info(id: 0x2A3C, name: 'INTERIOR PRODUCT', category: Cat::Math_Symbol)]
    case INTERIOR_PRODUCT = "\u{2A3C}";

    #[Info(id: 0x2A3D, name: 'RIGHTHAND INTERIOR PRODUCT', category: Cat::Math_Symbol)]
    case RIGHTHAND_INTERIOR_PRODUCT = "\u{2A3D}";

    #[Info(id: 0x2A3E, name: 'Z NOTATION RELATIONAL COMPOSITION', category: Cat::Math_Symbol)]
    case Z_NOTATION_RELATIONAL_COMPOSITION = "\u{2A3E}";

    #[Info(id: 0x2A3F, name: 'AMALGAMATION OR COPRODUCT', category: Cat::Math_Symbol)]
    case AMALGAMATION_OR_COPRODUCT = "\u{2A3F}";

    #[Info(id: 0x2A40, name: 'INTERSECTION WITH DOT', category: Cat::Math_Symbol)]
    case INTERSECTION_WITH_DOT = "\u{2A40}";

    #[Info(id: 0x2A41, name: 'UNION WITH MINUS SIGN', category: Cat::Math_Symbol, informativeAliases: ['z notation bag subtraction'])]
    case UNION_WITH_MINUS_SIGN = "\u{2A41}";

    #[Info(id: 0x2A42, name: 'UNION WITH OVERBAR', category: Cat::Math_Symbol)]
    case UNION_WITH_OVERBAR = "\u{2A42}";

    #[Info(id: 0x2A43, name: 'INTERSECTION WITH OVERBAR', category: Cat::Math_Symbol)]
    case INTERSECTION_WITH_OVERBAR = "\u{2A43}";

    #[Info(id: 0x2A44, name: 'INTERSECTION WITH LOGICAL AND', category: Cat::Math_Symbol)]
    case INTERSECTION_WITH_LOGICAL_AND = "\u{2A44}";

    #[Info(id: 0x2A45, name: 'UNION WITH LOGICAL OR', category: Cat::Math_Symbol)]
    case UNION_WITH_LOGICAL_OR = "\u{2A45}";

    #[Info(id: 0x2A46, name: 'UNION ABOVE INTERSECTION', category: Cat::Math_Symbol)]
    case UNION_ABOVE_INTERSECTION = "\u{2A46}";

    #[Info(id: 0x2A47, name: 'INTERSECTION ABOVE UNION', category: Cat::Math_Symbol)]
    case INTERSECTION_ABOVE_UNION = "\u{2A47}";

    #[Info(id: 0x2A48, name: 'UNION ABOVE BAR ABOVE INTERSECTION', category: Cat::Math_Symbol)]
    case UNION_ABOVE_BAR_ABOVE_INTERSECTION = "\u{2A48}";

    #[Info(id: 0x2A49, name: 'INTERSECTION ABOVE BAR ABOVE UNION', category: Cat::Math_Symbol)]
    case INTERSECTION_ABOVE_BAR_ABOVE_UNION = "\u{2A49}";

    #[Info(id: 0x2A4A, name: 'UNION BESIDE AND JOINED WITH UNION', category: Cat::Math_Symbol)]
    case UNION_BESIDE_AND_JOINED_WITH_UNION = "\u{2A4A}";

    #[Info(id: 0x2A4B, name: 'INTERSECTION BESIDE AND JOINED WITH INTERSECTION', category: Cat::Math_Symbol)]
    case INTERSECTION_BESIDE_AND_JOINED_WITH_INTERSECTION = "\u{2A4B}";

    #[Info(id: 0x2A4C, name: 'CLOSED UNION WITH SERIFS', category: Cat::Math_Symbol)]
    case CLOSED_UNION_WITH_SERIFS = "\u{2A4C}";

    #[Info(id: 0x2A4D, name: 'CLOSED INTERSECTION WITH SERIFS', category: Cat::Math_Symbol)]
    case CLOSED_INTERSECTION_WITH_SERIFS = "\u{2A4D}";

    #[Info(id: 0x2A4E, name: 'DOUBLE SQUARE INTERSECTION', category: Cat::Math_Symbol)]
    case DOUBLE_SQUARE_INTERSECTION = "\u{2A4E}";

    #[Info(id: 0x2A4F, name: 'DOUBLE SQUARE UNION', category: Cat::Math_Symbol)]
    case DOUBLE_SQUARE_UNION = "\u{2A4F}";

    #[Info(id: 0x2A50, name: 'CLOSED UNION WITH SERIFS AND SMASH PRODUCT', category: Cat::Math_Symbol)]
    case CLOSED_UNION_WITH_SERIFS_AND_SMASH_PRODUCT = "\u{2A50}";

    #[Info(id: 0x2A51, name: 'LOGICAL AND WITH DOT ABOVE', category: Cat::Math_Symbol)]
    case LOGICAL_AND_WITH_DOT_ABOVE = "\u{2A51}";

    #[Info(id: 0x2A52, name: 'LOGICAL OR WITH DOT ABOVE', category: Cat::Math_Symbol)]
    case LOGICAL_OR_WITH_DOT_ABOVE = "\u{2A52}";

    #[Info(id: 0x2A53, name: 'DOUBLE LOGICAL AND', category: Cat::Math_Symbol)]
    case DOUBLE_LOGICAL_AND = "\u{2A53}";

    #[Info(id: 0x2A54, name: 'DOUBLE LOGICAL OR', category: Cat::Math_Symbol)]
    case DOUBLE_LOGICAL_OR = "\u{2A54}";

    #[Info(id: 0x2A55, name: 'TWO INTERSECTING LOGICAL AND', category: Cat::Math_Symbol)]
    case TWO_INTERSECTING_LOGICAL_AND = "\u{2A55}";

    #[Info(id: 0x2A56, name: 'TWO INTERSECTING LOGICAL OR', category: Cat::Math_Symbol)]
    case TWO_INTERSECTING_LOGICAL_OR = "\u{2A56}";

    #[Info(id: 0x2A57, name: 'SLOPING LARGE OR', category: Cat::Math_Symbol)]
    case SLOPING_LARGE_OR = "\u{2A57}";

    #[Info(id: 0x2A58, name: 'SLOPING LARGE AND', category: Cat::Math_Symbol)]
    case SLOPING_LARGE_AND = "\u{2A58}";

    #[Info(id: 0x2A59, name: 'LOGICAL OR OVERLAPPING LOGICAL AND', category: Cat::Math_Symbol)]
    case LOGICAL_OR_OVERLAPPING_LOGICAL_AND = "\u{2A59}";

    #[Info(id: 0x2A5A, name: 'LOGICAL AND WITH MIDDLE STEM', category: Cat::Math_Symbol)]
    case LOGICAL_AND_WITH_MIDDLE_STEM = "\u{2A5A}";

    #[Info(id: 0x2A5B, name: 'LOGICAL OR WITH MIDDLE STEM', category: Cat::Math_Symbol)]
    case LOGICAL_OR_WITH_MIDDLE_STEM = "\u{2A5B}";

    #[Info(id: 0x2A5C, name: 'LOGICAL AND WITH HORIZONTAL DASH', category: Cat::Math_Symbol)]
    case LOGICAL_AND_WITH_HORIZONTAL_DASH = "\u{2A5C}";

    #[Info(id: 0x2A5D, name: 'LOGICAL OR WITH HORIZONTAL DASH', category: Cat::Math_Symbol)]
    case LOGICAL_OR_WITH_HORIZONTAL_DASH = "\u{2A5D}";

    #[Info(id: 0x2A5E, name: 'LOGICAL AND WITH DOUBLE OVERBAR', category: Cat::Math_Symbol)]
    case LOGICAL_AND_WITH_DOUBLE_OVERBAR = "\u{2A5E}";

    #[Info(id: 0x2A5F, name: 'LOGICAL AND WITH UNDERBAR', category: Cat::Math_Symbol)]
    case LOGICAL_AND_WITH_UNDERBAR = "\u{2A5F}";

    #[Info(id: 0x2A60, name: 'LOGICAL AND WITH DOUBLE UNDERBAR', category: Cat::Math_Symbol)]
    case LOGICAL_AND_WITH_DOUBLE_UNDERBAR = "\u{2A60}";

    #[Info(id: 0x2A61, name: 'SMALL VEE WITH UNDERBAR', category: Cat::Math_Symbol)]
    case SMALL_VEE_WITH_UNDERBAR = "\u{2A61}";

    #[Info(id: 0x2A62, name: 'LOGICAL OR WITH DOUBLE OVERBAR', category: Cat::Math_Symbol)]
    case LOGICAL_OR_WITH_DOUBLE_OVERBAR = "\u{2A62}";

    #[Info(id: 0x2A63, name: 'LOGICAL OR WITH DOUBLE UNDERBAR', category: Cat::Math_Symbol)]
    case LOGICAL_OR_WITH_DOUBLE_UNDERBAR = "\u{2A63}";

    #[Info(id: 0x2A64, name: 'Z NOTATION DOMAIN ANTIRESTRICTION', category: Cat::Math_Symbol)]
    case Z_NOTATION_DOMAIN_ANTIRESTRICTION = "\u{2A64}";

    #[Info(id: 0x2A65, name: 'Z NOTATION RANGE ANTIRESTRICTION', category: Cat::Math_Symbol)]
    case Z_NOTATION_RANGE_ANTIRESTRICTION = "\u{2A65}";

    #[Info(id: 0x2A66, name: 'EQUALS SIGN WITH DOT BELOW', category: Cat::Math_Symbol)]
    case EQUALS_SIGN_WITH_DOT_BELOW = "\u{2A66}";

    #[Info(id: 0x2A67, name: 'IDENTICAL WITH DOT ABOVE', category: Cat::Math_Symbol)]
    case IDENTICAL_WITH_DOT_ABOVE = "\u{2A67}";

    #[Info(id: 0x2A68, name: 'TRIPLE HORIZONTAL BAR WITH DOUBLE VERTICAL STROKE', category: Cat::Math_Symbol, informativeAliases: ['identical and parallel to'])]
    case TRIPLE_HORIZONTAL_BAR_WITH_DOUBLE_VERTICAL_STROKE = "\u{2A68}";

    #[Info(id: 0x2A69, name: 'TRIPLE HORIZONTAL BAR WITH TRIPLE VERTICAL STROKE', category: Cat::Math_Symbol)]
    case TRIPLE_HORIZONTAL_BAR_WITH_TRIPLE_VERTICAL_STROKE = "\u{2A69}";

    #[Info(id: 0x2A6A, name: 'TILDE OPERATOR WITH DOT ABOVE', category: Cat::Math_Symbol)]
    case TILDE_OPERATOR_WITH_DOT_ABOVE = "\u{2A6A}";

    #[Info(id: 0x2A6B, name: 'TILDE OPERATOR WITH RISING DOTS', category: Cat::Math_Symbol)]
    case TILDE_OPERATOR_WITH_RISING_DOTS = "\u{2A6B}";

    #[Info(id: 0x2A6C, name: 'SIMILAR MINUS SIMILAR', category: Cat::Math_Symbol)]
    case SIMILAR_MINUS_SIMILAR = "\u{2A6C}";

    #[Info(id: 0x2A6D, name: 'CONGRUENT WITH DOT ABOVE', category: Cat::Math_Symbol)]
    case CONGRUENT_WITH_DOT_ABOVE = "\u{2A6D}";

    #[Info(id: 0x2A6E, name: 'EQUALS WITH ASTERISK', category: Cat::Math_Symbol)]
    case EQUALS_WITH_ASTERISK = "\u{2A6E}";

    #[Info(id: 0x2A6F, name: 'ALMOST EQUAL TO WITH CIRCUMFLEX ACCENT', category: Cat::Math_Symbol)]
    case ALMOST_EQUAL_TO_WITH_CIRCUMFLEX_ACCENT = "\u{2A6F}";

    #[Info(id: 0x2A70, name: 'APPROXIMATELY EQUAL OR EQUAL TO', category: Cat::Math_Symbol)]
    case APPROXIMATELY_EQUAL_OR_EQUAL_TO = "\u{2A70}";

    #[Info(id: 0x2A71, name: 'EQUALS SIGN ABOVE PLUS SIGN', category: Cat::Math_Symbol)]
    case EQUALS_SIGN_ABOVE_PLUS_SIGN = "\u{2A71}";

    #[Info(id: 0x2A72, name: 'PLUS SIGN ABOVE EQUALS SIGN', category: Cat::Math_Symbol)]
    case PLUS_SIGN_ABOVE_EQUALS_SIGN = "\u{2A72}";

    #[Info(id: 0x2A73, name: 'EQUALS SIGN ABOVE TILDE OPERATOR', category: Cat::Math_Symbol)]
    case EQUALS_SIGN_ABOVE_TILDE_OPERATOR = "\u{2A73}";

    #[Info(id: 0x2A74, name: 'DOUBLE COLON EQUAL', category: Cat::Math_Symbol)]
    case DOUBLE_COLON_EQUAL = "\u{2A74}";

    #[Info(id: 0x2A75, name: 'TWO CONSECUTIVE EQUALS SIGNS', category: Cat::Math_Symbol)]
    case TWO_CONSECUTIVE_EQUALS_SIGNS = "\u{2A75}";

    #[Info(id: 0x2A76, name: 'THREE CONSECUTIVE EQUALS SIGNS', category: Cat::Math_Symbol)]
    case THREE_CONSECUTIVE_EQUALS_SIGNS = "\u{2A76}";

    #[Info(id: 0x2A77, name: 'EQUALS SIGN WITH TWO DOTS ABOVE AND TWO DOTS BELOW', category: Cat::Math_Symbol)]
    case EQUALS_SIGN_WITH_TWO_DOTS_ABOVE_AND_TWO_DOTS_BELOW = "\u{2A77}";

    #[Info(id: 0x2A78, name: 'EQUIVALENT WITH FOUR DOTS ABOVE', category: Cat::Math_Symbol)]
    case EQUIVALENT_WITH_FOUR_DOTS_ABOVE = "\u{2A78}";

    #[Info(id: 0x2A79, name: 'LESS-THAN WITH CIRCLE INSIDE', category: Cat::Math_Symbol)]
    case LESS_THAN_WITH_CIRCLE_INSIDE = "\u{2A79}";

    #[Info(id: 0x2A7A, name: 'GREATER-THAN WITH CIRCLE INSIDE', category: Cat::Math_Symbol)]
    case GREATER_THAN_WITH_CIRCLE_INSIDE = "\u{2A7A}";

    #[Info(id: 0x2A7B, name: 'LESS-THAN WITH QUESTION MARK ABOVE', category: Cat::Math_Symbol)]
    case LESS_THAN_WITH_QUESTION_MARK_ABOVE = "\u{2A7B}";

    #[Info(id: 0x2A7C, name: 'GREATER-THAN WITH QUESTION MARK ABOVE', category: Cat::Math_Symbol)]
    case GREATER_THAN_WITH_QUESTION_MARK_ABOVE = "\u{2A7C}";

    #[Info(id: 0x2A7D, name: 'LESS-THAN OR SLANTED EQUAL TO', category: Cat::Math_Symbol)]
    case LESS_THAN_OR_SLANTED_EQUAL_TO = "\u{2A7D}";

    #[Info(id: 0x2A7E, name: 'GREATER-THAN OR SLANTED EQUAL TO', category: Cat::Math_Symbol)]
    case GREATER_THAN_OR_SLANTED_EQUAL_TO = "\u{2A7E}";

    #[Info(id: 0x2A7F, name: 'LESS-THAN OR SLANTED EQUAL TO WITH DOT INSIDE', category: Cat::Math_Symbol)]
    case LESS_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_INSIDE = "\u{2A7F}";

    #[Info(id: 0x2A80, name: 'GREATER-THAN OR SLANTED EQUAL TO WITH DOT INSIDE', category: Cat::Math_Symbol)]
    case GREATER_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_INSIDE = "\u{2A80}";

    #[Info(id: 0x2A81, name: 'LESS-THAN OR SLANTED EQUAL TO WITH DOT ABOVE', category: Cat::Math_Symbol)]
    case LESS_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE = "\u{2A81}";

    #[Info(id: 0x2A82, name: 'GREATER-THAN OR SLANTED EQUAL TO WITH DOT ABOVE', category: Cat::Math_Symbol)]
    case GREATER_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE = "\u{2A82}";

    #[Info(id: 0x2A83, name: 'LESS-THAN OR SLANTED EQUAL TO WITH DOT ABOVE RIGHT', category: Cat::Math_Symbol)]
    case LESS_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE_RIGHT = "\u{2A83}";

    #[Info(id: 0x2A84, name: 'GREATER-THAN OR SLANTED EQUAL TO WITH DOT ABOVE LEFT', category: Cat::Math_Symbol)]
    case GREATER_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE_LEFT = "\u{2A84}";

    #[Info(id: 0x2A85, name: 'LESS-THAN OR APPROXIMATE', category: Cat::Math_Symbol)]
    case LESS_THAN_OR_APPROXIMATE = "\u{2A85}";

    #[Info(id: 0x2A86, name: 'GREATER-THAN OR APPROXIMATE', category: Cat::Math_Symbol)]
    case GREATER_THAN_OR_APPROXIMATE = "\u{2A86}";

    #[Info(id: 0x2A87, name: 'LESS-THAN AND SINGLE-LINE NOT EQUAL TO', category: Cat::Math_Symbol)]
    case LESS_THAN_AND_SINGLE_LINE_NOT_EQUAL_TO = "\u{2A87}";

    #[Info(id: 0x2A88, name: 'GREATER-THAN AND SINGLE-LINE NOT EQUAL TO', category: Cat::Math_Symbol)]
    case GREATER_THAN_AND_SINGLE_LINE_NOT_EQUAL_TO = "\u{2A88}";

    #[Info(id: 0x2A89, name: 'LESS-THAN AND NOT APPROXIMATE', category: Cat::Math_Symbol)]
    case LESS_THAN_AND_NOT_APPROXIMATE = "\u{2A89}";

    #[Info(id: 0x2A8A, name: 'GREATER-THAN AND NOT APPROXIMATE', category: Cat::Math_Symbol)]
    case GREATER_THAN_AND_NOT_APPROXIMATE = "\u{2A8A}";

    #[Info(id: 0x2A8B, name: 'LESS-THAN ABOVE DOUBLE-LINE EQUAL ABOVE GREATER-THAN', category: Cat::Math_Symbol)]
    case LESS_THAN_ABOVE_DOUBLE_LINE_EQUAL_ABOVE_GREATER_THAN = "\u{2A8B}";

    #[Info(id: 0x2A8C, name: 'GREATER-THAN ABOVE DOUBLE-LINE EQUAL ABOVE LESS-THAN', category: Cat::Math_Symbol)]
    case GREATER_THAN_ABOVE_DOUBLE_LINE_EQUAL_ABOVE_LESS_THAN = "\u{2A8C}";

    #[Info(id: 0x2A8D, name: 'LESS-THAN ABOVE SIMILAR OR EQUAL', category: Cat::Math_Symbol)]
    case LESS_THAN_ABOVE_SIMILAR_OR_EQUAL = "\u{2A8D}";

    #[Info(id: 0x2A8E, name: 'GREATER-THAN ABOVE SIMILAR OR EQUAL', category: Cat::Math_Symbol)]
    case GREATER_THAN_ABOVE_SIMILAR_OR_EQUAL = "\u{2A8E}";

    #[Info(id: 0x2A8F, name: 'LESS-THAN ABOVE SIMILAR ABOVE GREATER-THAN', category: Cat::Math_Symbol)]
    case LESS_THAN_ABOVE_SIMILAR_ABOVE_GREATER_THAN = "\u{2A8F}";

    #[Info(id: 0x2A90, name: 'GREATER-THAN ABOVE SIMILAR ABOVE LESS-THAN', category: Cat::Math_Symbol)]
    case GREATER_THAN_ABOVE_SIMILAR_ABOVE_LESS_THAN = "\u{2A90}";

    #[Info(id: 0x2A91, name: 'LESS-THAN ABOVE GREATER-THAN ABOVE DOUBLE-LINE EQUAL', category: Cat::Math_Symbol)]
    case LESS_THAN_ABOVE_GREATER_THAN_ABOVE_DOUBLE_LINE_EQUAL = "\u{2A91}";

    #[Info(id: 0x2A92, name: 'GREATER-THAN ABOVE LESS-THAN ABOVE DOUBLE-LINE EQUAL', category: Cat::Math_Symbol)]
    case GREATER_THAN_ABOVE_LESS_THAN_ABOVE_DOUBLE_LINE_EQUAL = "\u{2A92}";

    #[Info(id: 0x2A93, name: 'LESS-THAN ABOVE SLANTED EQUAL ABOVE GREATER-THAN ABOVE SLANTED EQUAL', category: Cat::Math_Symbol)]
    case LESS_THAN_ABOVE_SLANTED_EQUAL_ABOVE_GREATER_THAN_ABOVE_SLANTED_EQUAL = "\u{2A93}";

    #[Info(id: 0x2A94, name: 'GREATER-THAN ABOVE SLANTED EQUAL ABOVE LESS-THAN ABOVE SLANTED EQUAL', category: Cat::Math_Symbol)]
    case GREATER_THAN_ABOVE_SLANTED_EQUAL_ABOVE_LESS_THAN_ABOVE_SLANTED_EQUAL = "\u{2A94}";

    #[Info(id: 0x2A95, name: 'SLANTED EQUAL TO OR LESS-THAN', category: Cat::Math_Symbol)]
    case SLANTED_EQUAL_TO_OR_LESS_THAN = "\u{2A95}";

    #[Info(id: 0x2A96, name: 'SLANTED EQUAL TO OR GREATER-THAN', category: Cat::Math_Symbol)]
    case SLANTED_EQUAL_TO_OR_GREATER_THAN = "\u{2A96}";

    #[Info(id: 0x2A97, name: 'SLANTED EQUAL TO OR LESS-THAN WITH DOT INSIDE', category: Cat::Math_Symbol)]
    case SLANTED_EQUAL_TO_OR_LESS_THAN_WITH_DOT_INSIDE = "\u{2A97}";

    #[Info(id: 0x2A98, name: 'SLANTED EQUAL TO OR GREATER-THAN WITH DOT INSIDE', category: Cat::Math_Symbol)]
    case SLANTED_EQUAL_TO_OR_GREATER_THAN_WITH_DOT_INSIDE = "\u{2A98}";

    #[Info(id: 0x2A99, name: 'DOUBLE-LINE EQUAL TO OR LESS-THAN', category: Cat::Math_Symbol)]
    case DOUBLE_LINE_EQUAL_TO_OR_LESS_THAN = "\u{2A99}";

    #[Info(id: 0x2A9A, name: 'DOUBLE-LINE EQUAL TO OR GREATER-THAN', category: Cat::Math_Symbol)]
    case DOUBLE_LINE_EQUAL_TO_OR_GREATER_THAN = "\u{2A9A}";

    #[Info(id: 0x2A9B, name: 'DOUBLE-LINE SLANTED EQUAL TO OR LESS-THAN', category: Cat::Math_Symbol)]
    case DOUBLE_LINE_SLANTED_EQUAL_TO_OR_LESS_THAN = "\u{2A9B}";

    #[Info(id: 0x2A9C, name: 'DOUBLE-LINE SLANTED EQUAL TO OR GREATER-THAN', category: Cat::Math_Symbol)]
    case DOUBLE_LINE_SLANTED_EQUAL_TO_OR_GREATER_THAN = "\u{2A9C}";

    #[Info(id: 0x2A9D, name: 'SIMILAR OR LESS-THAN', category: Cat::Math_Symbol)]
    case SIMILAR_OR_LESS_THAN = "\u{2A9D}";

    #[Info(id: 0x2A9E, name: 'SIMILAR OR GREATER-THAN', category: Cat::Math_Symbol)]
    case SIMILAR_OR_GREATER_THAN = "\u{2A9E}";

    #[Info(id: 0x2A9F, name: 'SIMILAR ABOVE LESS-THAN ABOVE EQUALS SIGN', category: Cat::Math_Symbol)]
    case SIMILAR_ABOVE_LESS_THAN_ABOVE_EQUALS_SIGN = "\u{2A9F}";

    #[Info(id: 0x2AA0, name: 'SIMILAR ABOVE GREATER-THAN ABOVE EQUALS SIGN', category: Cat::Math_Symbol)]
    case SIMILAR_ABOVE_GREATER_THAN_ABOVE_EQUALS_SIGN = "\u{2AA0}";

    #[Info(id: 0x2AA1, name: 'DOUBLE NESTED LESS-THAN', category: Cat::Math_Symbol, informativeAliases: ['absolute continuity'])]
    case DOUBLE_NESTED_LESS_THAN = "\u{2AA1}";

    #[Info(id: 0x2AA2, name: 'DOUBLE NESTED GREATER-THAN', category: Cat::Math_Symbol)]
    case DOUBLE_NESTED_GREATER_THAN = "\u{2AA2}";

    #[Info(id: 0x2AA3, name: 'DOUBLE NESTED LESS-THAN WITH UNDERBAR', category: Cat::Math_Symbol)]
    case DOUBLE_NESTED_LESS_THAN_WITH_UNDERBAR = "\u{2AA3}";

    #[Info(id: 0x2AA4, name: 'GREATER-THAN OVERLAPPING LESS-THAN', category: Cat::Math_Symbol)]
    case GREATER_THAN_OVERLAPPING_LESS_THAN = "\u{2AA4}";

    #[Info(id: 0x2AA5, name: 'GREATER-THAN BESIDE LESS-THAN', category: Cat::Math_Symbol)]
    case GREATER_THAN_BESIDE_LESS_THAN = "\u{2AA5}";

    #[Info(id: 0x2AA6, name: 'LESS-THAN CLOSED BY CURVE', category: Cat::Math_Symbol)]
    case LESS_THAN_CLOSED_BY_CURVE = "\u{2AA6}";

    #[Info(id: 0x2AA7, name: 'GREATER-THAN CLOSED BY CURVE', category: Cat::Math_Symbol)]
    case GREATER_THAN_CLOSED_BY_CURVE = "\u{2AA7}";

    #[Info(id: 0x2AA8, name: 'LESS-THAN CLOSED BY CURVE ABOVE SLANTED EQUAL', category: Cat::Math_Symbol)]
    case LESS_THAN_CLOSED_BY_CURVE_ABOVE_SLANTED_EQUAL = "\u{2AA8}";

    #[Info(id: 0x2AA9, name: 'GREATER-THAN CLOSED BY CURVE ABOVE SLANTED EQUAL', category: Cat::Math_Symbol)]
    case GREATER_THAN_CLOSED_BY_CURVE_ABOVE_SLANTED_EQUAL = "\u{2AA9}";

    #[Info(id: 0x2AAA, name: 'SMALLER THAN', category: Cat::Math_Symbol)]
    case SMALLER_THAN = "\u{2AAA}";

    #[Info(id: 0x2AAB, name: 'LARGER THAN', category: Cat::Math_Symbol)]
    case LARGER_THAN = "\u{2AAB}";

    #[Info(id: 0x2AAC, name: 'SMALLER THAN OR EQUAL TO', category: Cat::Math_Symbol)]
    case SMALLER_THAN_OR_EQUAL_TO = "\u{2AAC}";

    #[Info(id: 0x2AAD, name: 'LARGER THAN OR EQUAL TO', category: Cat::Math_Symbol)]
    case LARGER_THAN_OR_EQUAL_TO = "\u{2AAD}";

    #[Info(id: 0x2AAE, name: 'EQUALS SIGN WITH BUMPY ABOVE', category: Cat::Math_Symbol)]
    case EQUALS_SIGN_WITH_BUMPY_ABOVE = "\u{2AAE}";

    #[Info(id: 0x2AAF, name: 'PRECEDES ABOVE SINGLE-LINE EQUALS SIGN', category: Cat::Math_Symbol)]
    case PRECEDES_ABOVE_SINGLE_LINE_EQUALS_SIGN = "\u{2AAF}";

    #[Info(id: 0x2AB0, name: 'SUCCEEDS ABOVE SINGLE-LINE EQUALS SIGN', category: Cat::Math_Symbol)]
    case SUCCEEDS_ABOVE_SINGLE_LINE_EQUALS_SIGN = "\u{2AB0}";

    #[Info(id: 0x2AB1, name: 'PRECEDES ABOVE SINGLE-LINE NOT EQUAL TO', category: Cat::Math_Symbol)]
    case PRECEDES_ABOVE_SINGLE_LINE_NOT_EQUAL_TO = "\u{2AB1}";

    #[Info(id: 0x2AB2, name: 'SUCCEEDS ABOVE SINGLE-LINE NOT EQUAL TO', category: Cat::Math_Symbol)]
    case SUCCEEDS_ABOVE_SINGLE_LINE_NOT_EQUAL_TO = "\u{2AB2}";

    #[Info(id: 0x2AB3, name: 'PRECEDES ABOVE EQUALS SIGN', category: Cat::Math_Symbol)]
    case PRECEDES_ABOVE_EQUALS_SIGN = "\u{2AB3}";

    #[Info(id: 0x2AB4, name: 'SUCCEEDS ABOVE EQUALS SIGN', category: Cat::Math_Symbol)]
    case SUCCEEDS_ABOVE_EQUALS_SIGN = "\u{2AB4}";

    #[Info(id: 0x2AB5, name: 'PRECEDES ABOVE NOT EQUAL TO', category: Cat::Math_Symbol)]
    case PRECEDES_ABOVE_NOT_EQUAL_TO = "\u{2AB5}";

    #[Info(id: 0x2AB6, name: 'SUCCEEDS ABOVE NOT EQUAL TO', category: Cat::Math_Symbol)]
    case SUCCEEDS_ABOVE_NOT_EQUAL_TO = "\u{2AB6}";

    #[Info(id: 0x2AB7, name: 'PRECEDES ABOVE ALMOST EQUAL TO', category: Cat::Math_Symbol)]
    case PRECEDES_ABOVE_ALMOST_EQUAL_TO = "\u{2AB7}";

    #[Info(id: 0x2AB8, name: 'SUCCEEDS ABOVE ALMOST EQUAL TO', category: Cat::Math_Symbol)]
    case SUCCEEDS_ABOVE_ALMOST_EQUAL_TO = "\u{2AB8}";

    #[Info(id: 0x2AB9, name: 'PRECEDES ABOVE NOT ALMOST EQUAL TO', category: Cat::Math_Symbol)]
    case PRECEDES_ABOVE_NOT_ALMOST_EQUAL_TO = "\u{2AB9}";

    #[Info(id: 0x2ABA, name: 'SUCCEEDS ABOVE NOT ALMOST EQUAL TO', category: Cat::Math_Symbol)]
    case SUCCEEDS_ABOVE_NOT_ALMOST_EQUAL_TO = "\u{2ABA}";

    #[Info(id: 0x2ABB, name: 'DOUBLE PRECEDES', category: Cat::Math_Symbol)]
    case DOUBLE_PRECEDES = "\u{2ABB}";

    #[Info(id: 0x2ABC, name: 'DOUBLE SUCCEEDS', category: Cat::Math_Symbol)]
    case DOUBLE_SUCCEEDS = "\u{2ABC}";

    #[Info(id: 0x2ABD, name: 'SUBSET WITH DOT', category: Cat::Math_Symbol)]
    case SUBSET_WITH_DOT = "\u{2ABD}";

    #[Info(id: 0x2ABE, name: 'SUPERSET WITH DOT', category: Cat::Math_Symbol)]
    case SUPERSET_WITH_DOT = "\u{2ABE}";

    #[Info(id: 0x2ABF, name: 'SUBSET WITH PLUS SIGN BELOW', category: Cat::Math_Symbol)]
    case SUBSET_WITH_PLUS_SIGN_BELOW = "\u{2ABF}";

    #[Info(id: 0x2AC0, name: 'SUPERSET WITH PLUS SIGN BELOW', category: Cat::Math_Symbol)]
    case SUPERSET_WITH_PLUS_SIGN_BELOW = "\u{2AC0}";

    #[Info(id: 0x2AC1, name: 'SUBSET WITH MULTIPLICATION SIGN BELOW', category: Cat::Math_Symbol)]
    case SUBSET_WITH_MULTIPLICATION_SIGN_BELOW = "\u{2AC1}";

    #[Info(id: 0x2AC2, name: 'SUPERSET WITH MULTIPLICATION SIGN BELOW', category: Cat::Math_Symbol)]
    case SUPERSET_WITH_MULTIPLICATION_SIGN_BELOW = "\u{2AC2}";

    #[Info(id: 0x2AC3, name: 'SUBSET OF OR EQUAL TO WITH DOT ABOVE', category: Cat::Math_Symbol)]
    case SUBSET_OF_OR_EQUAL_TO_WITH_DOT_ABOVE = "\u{2AC3}";

    #[Info(id: 0x2AC4, name: 'SUPERSET OF OR EQUAL TO WITH DOT ABOVE', category: Cat::Math_Symbol)]
    case SUPERSET_OF_OR_EQUAL_TO_WITH_DOT_ABOVE = "\u{2AC4}";

    #[Info(id: 0x2AC5, name: 'SUBSET OF ABOVE EQUALS SIGN', category: Cat::Math_Symbol)]
    case SUBSET_OF_ABOVE_EQUALS_SIGN = "\u{2AC5}";

    #[Info(id: 0x2AC6, name: 'SUPERSET OF ABOVE EQUALS SIGN', category: Cat::Math_Symbol)]
    case SUPERSET_OF_ABOVE_EQUALS_SIGN = "\u{2AC6}";

    #[Info(id: 0x2AC7, name: 'SUBSET OF ABOVE TILDE OPERATOR', category: Cat::Math_Symbol)]
    case SUBSET_OF_ABOVE_TILDE_OPERATOR = "\u{2AC7}";

    #[Info(id: 0x2AC8, name: 'SUPERSET OF ABOVE TILDE OPERATOR', category: Cat::Math_Symbol)]
    case SUPERSET_OF_ABOVE_TILDE_OPERATOR = "\u{2AC8}";

    #[Info(id: 0x2AC9, name: 'SUBSET OF ABOVE ALMOST EQUAL TO', category: Cat::Math_Symbol)]
    case SUBSET_OF_ABOVE_ALMOST_EQUAL_TO = "\u{2AC9}";

    #[Info(id: 0x2ACA, name: 'SUPERSET OF ABOVE ALMOST EQUAL TO', category: Cat::Math_Symbol)]
    case SUPERSET_OF_ABOVE_ALMOST_EQUAL_TO = "\u{2ACA}";

    #[Info(id: 0x2ACB, name: 'SUBSET OF ABOVE NOT EQUAL TO', category: Cat::Math_Symbol)]
    case SUBSET_OF_ABOVE_NOT_EQUAL_TO = "\u{2ACB}";

    #[Info(id: 0x2ACC, name: 'SUPERSET OF ABOVE NOT EQUAL TO', category: Cat::Math_Symbol)]
    case SUPERSET_OF_ABOVE_NOT_EQUAL_TO = "\u{2ACC}";

    #[Info(id: 0x2ACD, name: 'SQUARE LEFT OPEN BOX OPERATOR', category: Cat::Math_Symbol)]
    case SQUARE_LEFT_OPEN_BOX_OPERATOR = "\u{2ACD}";

    #[Info(id: 0x2ACE, name: 'SQUARE RIGHT OPEN BOX OPERATOR', category: Cat::Math_Symbol)]
    case SQUARE_RIGHT_OPEN_BOX_OPERATOR = "\u{2ACE}";

    #[Info(id: 0x2ACF, name: 'CLOSED SUBSET', category: Cat::Math_Symbol)]
    case CLOSED_SUBSET = "\u{2ACF}";

    #[Info(id: 0x2AD0, name: 'CLOSED SUPERSET', category: Cat::Math_Symbol)]
    case CLOSED_SUPERSET = "\u{2AD0}";

    #[Info(id: 0x2AD1, name: 'CLOSED SUBSET OR EQUAL TO', category: Cat::Math_Symbol)]
    case CLOSED_SUBSET_OR_EQUAL_TO = "\u{2AD1}";

    #[Info(id: 0x2AD2, name: 'CLOSED SUPERSET OR EQUAL TO', category: Cat::Math_Symbol)]
    case CLOSED_SUPERSET_OR_EQUAL_TO = "\u{2AD2}";

    #[Info(id: 0x2AD3, name: 'SUBSET ABOVE SUPERSET', category: Cat::Math_Symbol)]
    case SUBSET_ABOVE_SUPERSET = "\u{2AD3}";

    #[Info(id: 0x2AD4, name: 'SUPERSET ABOVE SUBSET', category: Cat::Math_Symbol)]
    case SUPERSET_ABOVE_SUBSET = "\u{2AD4}";

    #[Info(id: 0x2AD5, name: 'SUBSET ABOVE SUBSET', category: Cat::Math_Symbol)]
    case SUBSET_ABOVE_SUBSET = "\u{2AD5}";

    #[Info(id: 0x2AD6, name: 'SUPERSET ABOVE SUPERSET', category: Cat::Math_Symbol)]
    case SUPERSET_ABOVE_SUPERSET = "\u{2AD6}";

    #[Info(id: 0x2AD7, name: 'SUPERSET BESIDE SUBSET', category: Cat::Math_Symbol)]
    case SUPERSET_BESIDE_SUBSET = "\u{2AD7}";

    #[Info(id: 0x2AD8, name: 'SUPERSET BESIDE AND JOINED BY DASH WITH SUBSET', category: Cat::Math_Symbol)]
    case SUPERSET_BESIDE_AND_JOINED_BY_DASH_WITH_SUBSET = "\u{2AD8}";

    #[Info(id: 0x2AD9, name: 'ELEMENT OF OPENING DOWNWARDS', category: Cat::Math_Symbol)]
    case ELEMENT_OF_OPENING_DOWNWARDS = "\u{2AD9}";

    #[Info(id: 0x2ADA, name: 'PITCHFORK WITH TEE TOP', category: Cat::Math_Symbol)]
    case PITCHFORK_WITH_TEE_TOP = "\u{2ADA}";

    #[Info(id: 0x2ADB, name: 'TRANSVERSAL INTERSECTION', category: Cat::Math_Symbol)]
    case TRANSVERSAL_INTERSECTION = "\u{2ADB}";

    #[Info(id: 0x2ADC, name: 'FORKING', category: Cat::Math_Symbol, informativeAliases: ['not independent'])]
    case FORKING = "\u{2ADC}";

    #[Info(id: 0x2ADD, name: 'NONFORKING', category: Cat::Math_Symbol, informativeAliases: ['independent'])]
    case NONFORKING = "\u{2ADD}";

    #[Info(id: 0x2ADE, name: 'SHORT LEFT TACK', category: Cat::Math_Symbol)]
    case SHORT_LEFT_TACK = "\u{2ADE}";

    #[Info(id: 0x2ADF, name: 'SHORT DOWN TACK', category: Cat::Math_Symbol)]
    case SHORT_DOWN_TACK = "\u{2ADF}";

    #[Info(id: 0x2AE0, name: 'SHORT UP TACK', category: Cat::Math_Symbol)]
    case SHORT_UP_TACK = "\u{2AE0}";

    #[Info(id: 0x2AE1, name: 'PERPENDICULAR WITH S', category: Cat::Math_Symbol)]
    case PERPENDICULAR_WITH_S = "\u{2AE1}";

    #[Info(id: 0x2AE2, name: 'VERTICAL BAR TRIPLE RIGHT TURNSTILE', category: Cat::Math_Symbol, informativeAliases: ['ordinarily satisfies'])]
    case VERTICAL_BAR_TRIPLE_RIGHT_TURNSTILE = "\u{2AE2}";

    #[Info(id: 0x2AE3, name: 'DOUBLE VERTICAL BAR LEFT TURNSTILE', category: Cat::Math_Symbol)]
    case DOUBLE_VERTICAL_BAR_LEFT_TURNSTILE = "\u{2AE3}";

    #[Info(id: 0x2AE4, name: 'VERTICAL BAR DOUBLE LEFT TURNSTILE', category: Cat::Math_Symbol)]
    case VERTICAL_BAR_DOUBLE_LEFT_TURNSTILE = "\u{2AE4}";

    #[Info(id: 0x2AE5, name: 'DOUBLE VERTICAL BAR DOUBLE LEFT TURNSTILE', category: Cat::Math_Symbol)]
    case DOUBLE_VERTICAL_BAR_DOUBLE_LEFT_TURNSTILE = "\u{2AE5}";

    #[Info(id: 0x2AE6, name: 'LONG DASH FROM LEFT MEMBER OF DOUBLE VERTICAL', category: Cat::Math_Symbol)]
    case LONG_DASH_FROM_LEFT_MEMBER_OF_DOUBLE_VERTICAL = "\u{2AE6}";

    #[Info(id: 0x2AE7, name: 'SHORT DOWN TACK WITH OVERBAR', category: Cat::Math_Symbol)]
    case SHORT_DOWN_TACK_WITH_OVERBAR = "\u{2AE7}";

    #[Info(id: 0x2AE8, name: 'SHORT UP TACK WITH UNDERBAR', category: Cat::Math_Symbol)]
    case SHORT_UP_TACK_WITH_UNDERBAR = "\u{2AE8}";

    #[Info(id: 0x2AE9, name: 'SHORT UP TACK ABOVE SHORT DOWN TACK', category: Cat::Math_Symbol)]
    case SHORT_UP_TACK_ABOVE_SHORT_DOWN_TACK = "\u{2AE9}";

    #[Info(id: 0x2AEA, name: 'DOUBLE DOWN TACK', category: Cat::Math_Symbol)]
    case DOUBLE_DOWN_TACK = "\u{2AEA}";

    #[Info(id: 0x2AEB, name: 'DOUBLE UP TACK', category: Cat::Math_Symbol, informativeAliases: ['independence'])]
    case DOUBLE_UP_TACK = "\u{2AEB}";

    #[Info(id: 0x2AEC, name: 'DOUBLE STROKE NOT SIGN', category: Cat::Math_Symbol)]
    case DOUBLE_STROKE_NOT_SIGN = "\u{2AEC}";

    #[Info(id: 0x2AED, name: 'REVERSED DOUBLE STROKE NOT SIGN', category: Cat::Math_Symbol)]
    case REVERSED_DOUBLE_STROKE_NOT_SIGN = "\u{2AED}";

    #[Info(id: 0x2AEE, name: 'DOES NOT DIVIDE WITH REVERSED NEGATION SLASH', category: Cat::Math_Symbol)]
    case DOES_NOT_DIVIDE_WITH_REVERSED_NEGATION_SLASH = "\u{2AEE}";

    #[Info(id: 0x2AEF, name: 'VERTICAL LINE WITH CIRCLE ABOVE', category: Cat::Math_Symbol)]
    case VERTICAL_LINE_WITH_CIRCLE_ABOVE = "\u{2AEF}";

    #[Info(id: 0x2AF0, name: 'VERTICAL LINE WITH CIRCLE BELOW', category: Cat::Math_Symbol)]
    case VERTICAL_LINE_WITH_CIRCLE_BELOW = "\u{2AF0}";

    #[Info(id: 0x2AF1, name: 'DOWN TACK WITH CIRCLE BELOW', category: Cat::Math_Symbol, informativeAliases: ['necessarily satisfies'])]
    case DOWN_TACK_WITH_CIRCLE_BELOW = "\u{2AF1}";

    #[Info(id: 0x2AF2, name: 'PARALLEL WITH HORIZONTAL STROKE', category: Cat::Math_Symbol)]
    case PARALLEL_WITH_HORIZONTAL_STROKE = "\u{2AF2}";

    #[Info(id: 0x2AF3, name: 'PARALLEL WITH TILDE OPERATOR', category: Cat::Math_Symbol)]
    case PARALLEL_WITH_TILDE_OPERATOR = "\u{2AF3}";

    #[Info(id: 0x2AF4, name: 'TRIPLE VERTICAL BAR BINARY RELATION', category: Cat::Math_Symbol, informativeAliases: ['interleave'])]
    case TRIPLE_VERTICAL_BAR_BINARY_RELATION = "\u{2AF4}";

    #[Info(id: 0x2AF5, name: 'TRIPLE VERTICAL BAR WITH HORIZONTAL STROKE', category: Cat::Math_Symbol)]
    case TRIPLE_VERTICAL_BAR_WITH_HORIZONTAL_STROKE = "\u{2AF5}";

    #[Info(id: 0x2AF6, name: 'TRIPLE COLON OPERATOR', category: Cat::Math_Symbol)]
    case TRIPLE_COLON_OPERATOR = "\u{2AF6}";

    #[Info(id: 0x2AF7, name: 'TRIPLE NESTED LESS-THAN', category: Cat::Math_Symbol)]
    case TRIPLE_NESTED_LESS_THAN = "\u{2AF7}";

    #[Info(id: 0x2AF8, name: 'TRIPLE NESTED GREATER-THAN', category: Cat::Math_Symbol)]
    case TRIPLE_NESTED_GREATER_THAN = "\u{2AF8}";

    #[Info(id: 0x2AF9, name: 'DOUBLE-LINE SLANTED LESS-THAN OR EQUAL TO', category: Cat::Math_Symbol)]
    case DOUBLE_LINE_SLANTED_LESS_THAN_OR_EQUAL_TO = "\u{2AF9}";

    #[Info(id: 0x2AFA, name: 'DOUBLE-LINE SLANTED GREATER-THAN OR EQUAL TO', category: Cat::Math_Symbol)]
    case DOUBLE_LINE_SLANTED_GREATER_THAN_OR_EQUAL_TO = "\u{2AFA}";

    #[Info(id: 0x2AFB, name: 'TRIPLE SOLIDUS BINARY RELATION', category: Cat::Math_Symbol)]
    case TRIPLE_SOLIDUS_BINARY_RELATION = "\u{2AFB}";

    #[Info(id: 0x2AFC, name: 'LARGE TRIPLE VERTICAL BAR OPERATOR', category: Cat::Math_Symbol)]
    case LARGE_TRIPLE_VERTICAL_BAR_OPERATOR = "\u{2AFC}";

    #[Info(id: 0x2AFD, name: 'DOUBLE SOLIDUS OPERATOR', category: Cat::Math_Symbol)]
    case DOUBLE_SOLIDUS_OPERATOR = "\u{2AFD}";

    #[Info(id: 0x2AFE, name: 'WHITE VERTICAL BAR', category: Cat::Math_Symbol, informativeAliases: ['Dijkstra choice'])]
    case WHITE_VERTICAL_BAR = "\u{2AFE}";

    #[Info(id: 0x2AFF, name: 'N-ARY WHITE VERTICAL BAR', category: Cat::Math_Symbol, informativeAliases: ['n-ary Dijkstra choice'])]
    case N_ARY_WHITE_VERTICAL_BAR = "\u{2AFF}";
}
