<?php

/*
 * Please DO NOT edit this file manually!
 * It has been generated automatically by MLUnipoints\Build\CodepointsBuilder
 */

declare(strict_types=1);

namespace MLUnipoints\Codepoint;

use MLUnipoints\Category as Cat;
use MLUnipoints\Info\CodepointInfo as Info;
use MLUnipoints\Info\UnicodeInfo;

#[UnicodeInfo(unicodeVersion: '16.0.0')]
enum Mathematical_Operators: string
{
    #[Info(id: 0x2200, name: 'FOR ALL', category: Cat::Math_Symbol, informativeAliases: ['universal quantifier'])]
    case FOR_ALL = "\u{2200}";

    #[Info(id: 0x2201, name: 'COMPLEMENT', category: Cat::Math_Symbol)]
    case COMPLEMENT = "\u{2201}";

    #[Info(id: 0x2202, name: 'PARTIAL DIFFERENTIAL', category: Cat::Math_Symbol)]
    case PARTIAL_DIFFERENTIAL = "\u{2202}";

    #[Info(id: 0x2203, name: 'THERE EXISTS', category: Cat::Math_Symbol, informativeAliases: ['existential quantifier'])]
    case THERE_EXISTS = "\u{2203}";

    #[Info(id: 0x2204, name: 'THERE DOES NOT EXIST', category: Cat::Math_Symbol)]
    case THERE_DOES_NOT_EXIST = "\u{2204}";

    #[Info(id: 0x2205, name: 'EMPTY SET', category: Cat::Math_Symbol, informativeAliases: ['null set'])]
    case EMPTY_SET = "\u{2205}";

    #[Info(id: 0x2206, name: 'INCREMENT', category: Cat::Math_Symbol, informativeAliases: ['Laplace operator', 'forward difference', 'symmetric difference (in set theory)'])]
    case INCREMENT = "\u{2206}";

    #[Info(id: 0x2207, name: 'NABLA', category: Cat::Math_Symbol, informativeAliases: ['backward difference', 'gradient, del'])]
    case NABLA = "\u{2207}";

    #[Info(id: 0x2208, name: 'ELEMENT OF', category: Cat::Math_Symbol)]
    case ELEMENT_OF = "\u{2208}";

    #[Info(id: 0x2209, name: 'NOT AN ELEMENT OF', category: Cat::Math_Symbol)]
    case NOT_AN_ELEMENT_OF = "\u{2209}";

    #[Info(id: 0x220A, name: 'SMALL ELEMENT OF', category: Cat::Math_Symbol)]
    case SMALL_ELEMENT_OF = "\u{220A}";

    #[Info(id: 0x220B, name: 'CONTAINS AS MEMBER', category: Cat::Math_Symbol, informativeAliases: ['such that'])]
    case CONTAINS_AS_MEMBER = "\u{220B}";

    #[Info(id: 0x220C, name: 'DOES NOT CONTAIN AS MEMBER', category: Cat::Math_Symbol)]
    case DOES_NOT_CONTAIN_AS_MEMBER = "\u{220C}";

    #[Info(id: 0x220D, name: 'SMALL CONTAINS AS MEMBER', category: Cat::Math_Symbol)]
    case SMALL_CONTAINS_AS_MEMBER = "\u{220D}";

    #[Info(id: 0x220E, name: 'END OF PROOF', category: Cat::Math_Symbol, informativeAliases: ['q.e.d.'])]
    case END_OF_PROOF = "\u{220E}";

    #[Info(id: 0x220F, name: 'N-ARY PRODUCT', category: Cat::Math_Symbol, informativeAliases: ['product sign'])]
    case N_ARY_PRODUCT = "\u{220F}";

    #[Info(id: 0x2210, name: 'N-ARY COPRODUCT', category: Cat::Math_Symbol, informativeAliases: ['coproduct sign'])]
    case N_ARY_COPRODUCT = "\u{2210}";

    #[Info(id: 0x2211, name: 'N-ARY SUMMATION', category: Cat::Math_Symbol, informativeAliases: ['summation sign'])]
    case N_ARY_SUMMATION = "\u{2211}";

    #[Info(id: 0x2212, name: 'MINUS SIGN', category: Cat::Math_Symbol)]
    case MINUS_SIGN = "\u{2212}";

    #[Info(id: 0x2213, name: 'MINUS-OR-PLUS SIGN', category: Cat::Math_Symbol)]
    case MINUS_OR_PLUS_SIGN = "\u{2213}";

    #[Info(id: 0x2214, name: 'DOT PLUS', category: Cat::Math_Symbol)]
    case DOT_PLUS = "\u{2214}";

    #[Info(id: 0x2215, name: 'DIVISION SLASH', category: Cat::Math_Symbol)]
    case DIVISION_SLASH = "\u{2215}";

    #[Info(id: 0x2216, name: 'SET MINUS', category: Cat::Math_Symbol)]
    case SET_MINUS = "\u{2216}";

    #[Info(id: 0x2217, name: 'ASTERISK OPERATOR', category: Cat::Math_Symbol)]
    case ASTERISK_OPERATOR = "\u{2217}";

    #[Info(id: 0x2218, name: 'RING OPERATOR', category: Cat::Math_Symbol, informativeAliases: ['composite function', 'APL jot'])]
    case RING_OPERATOR = "\u{2218}";

    #[Info(id: 0x2219, name: 'BULLET OPERATOR', category: Cat::Math_Symbol)]
    case BULLET_OPERATOR = "\u{2219}";

    #[Info(id: 0x221A, name: 'SQUARE ROOT', category: Cat::Math_Symbol, informativeAliases: ['radical sign'])]
    case SQUARE_ROOT = "\u{221A}";

    #[Info(id: 0x221B, name: 'CUBE ROOT', category: Cat::Math_Symbol)]
    case CUBE_ROOT = "\u{221B}";

    #[Info(id: 0x221C, name: 'FOURTH ROOT', category: Cat::Math_Symbol)]
    case FOURTH_ROOT = "\u{221C}";

    #[Info(id: 0x221D, name: 'PROPORTIONAL TO', category: Cat::Math_Symbol)]
    case PROPORTIONAL_TO = "\u{221D}";

    #[Info(id: 0x221E, name: 'INFINITY', category: Cat::Math_Symbol)]
    case INFINITY = "\u{221E}";

    #[Info(id: 0x221F, name: 'RIGHT ANGLE', category: Cat::Math_Symbol, informativeAliases: ['with (in chess notation)'])]
    case RIGHT_ANGLE = "\u{221F}";

    #[Info(id: 0x2220, name: 'ANGLE', category: Cat::Math_Symbol)]
    case ANGLE = "\u{2220}";

    #[Info(id: 0x2221, name: 'MEASURED ANGLE', category: Cat::Math_Symbol)]
    case MEASURED_ANGLE = "\u{2221}";

    #[Info(id: 0x2222, name: 'SPHERICAL ANGLE', category: Cat::Math_Symbol, informativeAliases: ['angle arc'])]
    case SPHERICAL_ANGLE = "\u{2222}";

    #[Info(id: 0x2223, name: 'DIVIDES', category: Cat::Math_Symbol, informativeAliases: ['such that', 'APL stile'])]
    case DIVIDES = "\u{2223}";

    #[Info(id: 0x2224, name: 'DOES NOT DIVIDE', category: Cat::Math_Symbol)]
    case DOES_NOT_DIVIDE = "\u{2224}";

    #[Info(id: 0x2225, name: 'PARALLEL TO', category: Cat::Math_Symbol)]
    case PARALLEL_TO = "\u{2225}";

    #[Info(id: 0x2226, name: 'NOT PARALLEL TO', category: Cat::Math_Symbol)]
    case NOT_PARALLEL_TO = "\u{2226}";

    #[Info(id: 0x2227, name: 'LOGICAL AND', category: Cat::Math_Symbol, informativeAliases: ['wedge, conjunction'])]
    case LOGICAL_AND = "\u{2227}";

    #[Info(id: 0x2228, name: 'LOGICAL OR', category: Cat::Math_Symbol, informativeAliases: ['vee, disjunction'])]
    case LOGICAL_OR = "\u{2228}";

    #[Info(id: 0x2229, name: 'INTERSECTION', category: Cat::Math_Symbol, informativeAliases: ['cap, hat'])]
    case INTERSECTION = "\u{2229}";

    #[Info(id: 0x222A, name: 'UNION', category: Cat::Math_Symbol, informativeAliases: ['cup'])]
    case UNION = "\u{222A}";

    #[Info(id: 0x222B, name: 'INTEGRAL', category: Cat::Math_Symbol)]
    case INTEGRAL = "\u{222B}";

    #[Info(id: 0x222C, name: 'DOUBLE INTEGRAL', category: Cat::Math_Symbol)]
    case DOUBLE_INTEGRAL = "\u{222C}";

    #[Info(id: 0x222D, name: 'TRIPLE INTEGRAL', category: Cat::Math_Symbol)]
    case TRIPLE_INTEGRAL = "\u{222D}";

    #[Info(id: 0x222E, name: 'CONTOUR INTEGRAL', category: Cat::Math_Symbol)]
    case CONTOUR_INTEGRAL = "\u{222E}";

    #[Info(id: 0x222F, name: 'SURFACE INTEGRAL', category: Cat::Math_Symbol)]
    case SURFACE_INTEGRAL = "\u{222F}";

    #[Info(id: 0x2230, name: 'VOLUME INTEGRAL', category: Cat::Math_Symbol)]
    case VOLUME_INTEGRAL = "\u{2230}";

    #[Info(id: 0x2231, name: 'CLOCKWISE INTEGRAL', category: Cat::Math_Symbol)]
    case CLOCKWISE_INTEGRAL = "\u{2231}";

    #[Info(id: 0x2232, name: 'CLOCKWISE CONTOUR INTEGRAL', category: Cat::Math_Symbol)]
    case CLOCKWISE_CONTOUR_INTEGRAL = "\u{2232}";

    #[Info(id: 0x2233, name: 'ANTICLOCKWISE CONTOUR INTEGRAL', category: Cat::Math_Symbol)]
    case ANTICLOCKWISE_CONTOUR_INTEGRAL = "\u{2233}";

    #[Info(id: 0x2234, name: 'THEREFORE', category: Cat::Math_Symbol)]
    case THEREFORE = "\u{2234}";

    #[Info(id: 0x2235, name: 'BECAUSE', category: Cat::Math_Symbol)]
    case BECAUSE = "\u{2235}";

    #[Info(id: 0x2236, name: 'RATIO', category: Cat::Math_Symbol)]
    case RATIO = "\u{2236}";

    #[Info(id: 0x2237, name: 'PROPORTION', category: Cat::Math_Symbol)]
    case PROPORTION = "\u{2237}";

    #[Info(id: 0x2238, name: 'DOT MINUS', category: Cat::Math_Symbol, informativeAliases: ['saturating subtraction'])]
    case DOT_MINUS = "\u{2238}";

    #[Info(id: 0x2239, name: 'EXCESS', category: Cat::Math_Symbol)]
    case EXCESS = "\u{2239}";

    #[Info(id: 0x223A, name: 'GEOMETRIC PROPORTION', category: Cat::Math_Symbol)]
    case GEOMETRIC_PROPORTION = "\u{223A}";

    #[Info(id: 0x223B, name: 'HOMOTHETIC', category: Cat::Math_Symbol)]
    case HOMOTHETIC = "\u{223B}";

    #[Info(id: 0x223C, name: 'TILDE OPERATOR', category: Cat::Math_Symbol, informativeAliases: ['varies with (proportional to)', 'difference between', 'similar to', 'not', 'cycle', 'APL tilde'])]
    case TILDE_OPERATOR = "\u{223C}";

    #[Info(id: 0x223D, name: 'REVERSED TILDE', category: Cat::Math_Symbol, informativeAliases: ['lazy S'])]
    case REVERSED_TILDE = "\u{223D}";

    #[Info(id: 0x223E, name: 'INVERTED LAZY S', category: Cat::Math_Symbol, informativeAliases: ['most positive'])]
    case INVERTED_LAZY_S = "\u{223E}";

    #[Info(id: 0x223F, name: 'SINE WAVE', category: Cat::Math_Symbol, informativeAliases: ['alternating current'])]
    case SINE_WAVE = "\u{223F}";

    #[Info(id: 0x2240, name: 'WREATH PRODUCT', category: Cat::Math_Symbol)]
    case WREATH_PRODUCT = "\u{2240}";

    #[Info(id: 0x2241, name: 'NOT TILDE', category: Cat::Math_Symbol)]
    case NOT_TILDE = "\u{2241}";

    #[Info(id: 0x2242, name: 'MINUS TILDE', category: Cat::Math_Symbol)]
    case MINUS_TILDE = "\u{2242}";

    #[Info(id: 0x2243, name: 'ASYMPTOTICALLY EQUAL TO', category: Cat::Math_Symbol)]
    case ASYMPTOTICALLY_EQUAL_TO = "\u{2243}";

    #[Info(id: 0x2244, name: 'NOT ASYMPTOTICALLY EQUAL TO', category: Cat::Math_Symbol)]
    case NOT_ASYMPTOTICALLY_EQUAL_TO = "\u{2244}";

    #[Info(id: 0x2245, name: 'APPROXIMATELY EQUAL TO', category: Cat::Math_Symbol)]
    case APPROXIMATELY_EQUAL_TO = "\u{2245}";

    #[Info(id: 0x2246, name: 'APPROXIMATELY BUT NOT ACTUALLY EQUAL TO', category: Cat::Math_Symbol)]
    case APPROXIMATELY_BUT_NOT_ACTUALLY_EQUAL_TO = "\u{2246}";

    #[Info(id: 0x2247, name: 'NEITHER APPROXIMATELY NOR ACTUALLY EQUAL TO', category: Cat::Math_Symbol)]
    case NEITHER_APPROXIMATELY_NOR_ACTUALLY_EQUAL_TO = "\u{2247}";

    #[Info(id: 0x2248, name: 'ALMOST EQUAL TO', category: Cat::Math_Symbol, informativeAliases: ['asymptotic to'])]
    case ALMOST_EQUAL_TO = "\u{2248}";

    #[Info(id: 0x2249, name: 'NOT ALMOST EQUAL TO', category: Cat::Math_Symbol)]
    case NOT_ALMOST_EQUAL_TO = "\u{2249}";

    #[Info(id: 0x224A, name: 'ALMOST EQUAL OR EQUAL TO', category: Cat::Math_Symbol)]
    case ALMOST_EQUAL_OR_EQUAL_TO = "\u{224A}";

    #[Info(id: 0x224B, name: 'TRIPLE TILDE', category: Cat::Math_Symbol)]
    case TRIPLE_TILDE = "\u{224B}";

    #[Info(id: 0x224C, name: 'ALL EQUAL TO', category: Cat::Math_Symbol)]
    case ALL_EQUAL_TO = "\u{224C}";

    #[Info(id: 0x224D, name: 'EQUIVALENT TO', category: Cat::Math_Symbol)]
    case EQUIVALENT_TO = "\u{224D}";

    #[Info(id: 0x224E, name: 'GEOMETRICALLY EQUIVALENT TO', category: Cat::Math_Symbol)]
    case GEOMETRICALLY_EQUIVALENT_TO = "\u{224E}";

    #[Info(id: 0x224F, name: 'DIFFERENCE BETWEEN', category: Cat::Math_Symbol)]
    case DIFFERENCE_BETWEEN = "\u{224F}";

    #[Info(id: 0x2250, name: 'APPROACHES THE LIMIT', category: Cat::Math_Symbol)]
    case APPROACHES_THE_LIMIT = "\u{2250}";

    #[Info(id: 0x2251, name: 'GEOMETRICALLY EQUAL TO', category: Cat::Math_Symbol)]
    case GEOMETRICALLY_EQUAL_TO = "\u{2251}";

    #[Info(id: 0x2252, name: 'APPROXIMATELY EQUAL TO OR THE IMAGE OF', category: Cat::Math_Symbol, informativeAliases: ['nearly equals'])]
    case APPROXIMATELY_EQUAL_TO_OR_THE_IMAGE_OF = "\u{2252}";

    #[Info(id: 0x2253, name: 'IMAGE OF OR APPROXIMATELY EQUAL TO', category: Cat::Math_Symbol)]
    case IMAGE_OF_OR_APPROXIMATELY_EQUAL_TO = "\u{2253}";

    #[Info(id: 0x2254, name: 'COLON EQUALS', category: Cat::Math_Symbol, unicode1Name: 'COLON EQUAL')]
    case COLON_EQUALS = "\u{2254}";

    #[Info(id: 0x2255, name: 'EQUALS COLON', category: Cat::Math_Symbol, unicode1Name: 'EQUAL COLON')]
    case EQUALS_COLON = "\u{2255}";

    #[Info(id: 0x2256, name: 'RING IN EQUAL TO', category: Cat::Math_Symbol)]
    case RING_IN_EQUAL_TO = "\u{2256}";

    #[Info(id: 0x2257, name: 'RING EQUAL TO', category: Cat::Math_Symbol, informativeAliases: ['approximately equal to'])]
    case RING_EQUAL_TO = "\u{2257}";

    #[Info(id: 0x2258, name: 'CORRESPONDS TO', category: Cat::Math_Symbol)]
    case CORRESPONDS_TO = "\u{2258}";

    #[Info(id: 0x2259, name: 'ESTIMATES', category: Cat::Math_Symbol, informativeAliases: ['corresponds to'])]
    case ESTIMATES = "\u{2259}";

    #[Info(id: 0x225A, name: 'EQUIANGULAR TO', category: Cat::Math_Symbol)]
    case EQUIANGULAR_TO = "\u{225A}";

    #[Info(id: 0x225B, name: 'STAR EQUALS', category: Cat::Math_Symbol)]
    case STAR_EQUALS = "\u{225B}";

    #[Info(id: 0x225C, name: 'DELTA EQUAL TO', category: Cat::Math_Symbol, informativeAliases: ['equiangular', 'equal to by definition'])]
    case DELTA_EQUAL_TO = "\u{225C}";

    #[Info(id: 0x225D, name: 'EQUAL TO BY DEFINITION', category: Cat::Math_Symbol)]
    case EQUAL_TO_BY_DEFINITION = "\u{225D}";

    #[Info(id: 0x225E, name: 'MEASURED BY', category: Cat::Math_Symbol)]
    case MEASURED_BY = "\u{225E}";

    #[Info(id: 0x225F, name: 'QUESTIONED EQUAL TO', category: Cat::Math_Symbol)]
    case QUESTIONED_EQUAL_TO = "\u{225F}";

    #[Info(id: 0x2260, name: 'NOT EQUAL TO', category: Cat::Math_Symbol)]
    case NOT_EQUAL_TO = "\u{2260}";

    #[Info(id: 0x2261, name: 'IDENTICAL TO', category: Cat::Math_Symbol)]
    case IDENTICAL_TO = "\u{2261}";

    #[Info(id: 0x2262, name: 'NOT IDENTICAL TO', category: Cat::Math_Symbol)]
    case NOT_IDENTICAL_TO = "\u{2262}";

    #[Info(id: 0x2263, name: 'STRICTLY EQUIVALENT TO', category: Cat::Math_Symbol)]
    case STRICTLY_EQUIVALENT_TO = "\u{2263}";

    #[Info(id: 0x2264, name: 'LESS-THAN OR EQUAL TO', category: Cat::Math_Symbol, unicode1Name: 'LESS THAN OR EQUAL TO')]
    case LESS_THAN_OR_EQUAL_TO = "\u{2264}";

    #[Info(id: 0x2265, name: 'GREATER-THAN OR EQUAL TO', category: Cat::Math_Symbol, unicode1Name: 'GREATER THAN OR EQUAL TO')]
    case GREATER_THAN_OR_EQUAL_TO = "\u{2265}";

    #[Info(id: 0x2266, name: 'LESS-THAN OVER EQUAL TO', category: Cat::Math_Symbol, unicode1Name: 'LESS THAN OVER EQUAL TO')]
    case LESS_THAN_OVER_EQUAL_TO = "\u{2266}";

    #[Info(id: 0x2267, name: 'GREATER-THAN OVER EQUAL TO', category: Cat::Math_Symbol, unicode1Name: 'GREATER THAN OVER EQUAL TO')]
    case GREATER_THAN_OVER_EQUAL_TO = "\u{2267}";

    #[Info(id: 0x2268, name: 'LESS-THAN BUT NOT EQUAL TO', category: Cat::Math_Symbol, unicode1Name: 'LESS THAN BUT NOT EQUAL TO')]
    case LESS_THAN_BUT_NOT_EQUAL_TO = "\u{2268}";

    #[Info(id: 0x2269, name: 'GREATER-THAN BUT NOT EQUAL TO', category: Cat::Math_Symbol, unicode1Name: 'GREATER THAN BUT NOT EQUAL TO')]
    case GREATER_THAN_BUT_NOT_EQUAL_TO = "\u{2269}";

    #[Info(id: 0x226A, name: 'MUCH LESS-THAN', category: Cat::Math_Symbol, unicode1Name: 'MUCH LESS THAN')]
    case MUCH_LESS_THAN = "\u{226A}";

    #[Info(id: 0x226B, name: 'MUCH GREATER-THAN', category: Cat::Math_Symbol, unicode1Name: 'MUCH GREATER THAN')]
    case MUCH_GREATER_THAN = "\u{226B}";

    #[Info(id: 0x226C, name: 'BETWEEN', category: Cat::Math_Symbol, informativeAliases: ['plaintiff, quantic'])]
    case BETWEEN = "\u{226C}";

    #[Info(id: 0x226D, name: 'NOT EQUIVALENT TO', category: Cat::Math_Symbol)]
    case NOT_EQUIVALENT_TO = "\u{226D}";

    #[Info(id: 0x226E, name: 'NOT LESS-THAN', category: Cat::Math_Symbol, unicode1Name: 'NOT LESS THAN')]
    case NOT_LESS_THAN = "\u{226E}";

    #[Info(id: 0x226F, name: 'NOT GREATER-THAN', category: Cat::Math_Symbol, unicode1Name: 'NOT GREATER THAN')]
    case NOT_GREATER_THAN = "\u{226F}";

    #[Info(id: 0x2270, name: 'NEITHER LESS-THAN NOR EQUAL TO', category: Cat::Math_Symbol, unicode1Name: 'NEITHER LESS THAN NOR EQUAL TO')]
    case NEITHER_LESS_THAN_NOR_EQUAL_TO = "\u{2270}";

    #[Info(id: 0x2271, name: 'NEITHER GREATER-THAN NOR EQUAL TO', category: Cat::Math_Symbol, unicode1Name: 'NEITHER GREATER THAN NOR EQUAL TO')]
    case NEITHER_GREATER_THAN_NOR_EQUAL_TO = "\u{2271}";

    #[Info(id: 0x2272, name: 'LESS-THAN OR EQUIVALENT TO', category: Cat::Math_Symbol, unicode1Name: 'LESS THAN OR EQUIVALENT TO')]
    case LESS_THAN_OR_EQUIVALENT_TO = "\u{2272}";

    #[Info(id: 0x2273, name: 'GREATER-THAN OR EQUIVALENT TO', category: Cat::Math_Symbol, unicode1Name: 'GREATER THAN OR EQUIVALENT TO')]
    case GREATER_THAN_OR_EQUIVALENT_TO = "\u{2273}";

    #[Info(id: 0x2274, name: 'NEITHER LESS-THAN NOR EQUIVALENT TO', category: Cat::Math_Symbol, unicode1Name: 'NEITHER LESS THAN NOR EQUIVALENT TO')]
    case NEITHER_LESS_THAN_NOR_EQUIVALENT_TO = "\u{2274}";

    #[Info(id: 0x2275, name: 'NEITHER GREATER-THAN NOR EQUIVALENT TO', category: Cat::Math_Symbol, unicode1Name: 'NEITHER GREATER THAN NOR EQUIVALENT TO')]
    case NEITHER_GREATER_THAN_NOR_EQUIVALENT_TO = "\u{2275}";

    #[Info(id: 0x2276, name: 'LESS-THAN OR GREATER-THAN', category: Cat::Math_Symbol, unicode1Name: 'LESS THAN OR GREATER THAN')]
    case LESS_THAN_OR_GREATER_THAN = "\u{2276}";

    #[Info(id: 0x2277, name: 'GREATER-THAN OR LESS-THAN', category: Cat::Math_Symbol, unicode1Name: 'GREATER THAN OR LESS THAN')]
    case GREATER_THAN_OR_LESS_THAN = "\u{2277}";

    #[Info(id: 0x2278, name: 'NEITHER LESS-THAN NOR GREATER-THAN', category: Cat::Math_Symbol, unicode1Name: 'NEITHER LESS THAN NOR GREATER THAN')]
    case NEITHER_LESS_THAN_NOR_GREATER_THAN = "\u{2278}";

    #[Info(id: 0x2279, name: 'NEITHER GREATER-THAN NOR LESS-THAN', category: Cat::Math_Symbol, unicode1Name: 'NEITHER GREATER THAN NOR LESS THAN')]
    case NEITHER_GREATER_THAN_NOR_LESS_THAN = "\u{2279}";

    #[Info(id: 0x227A, name: 'PRECEDES', category: Cat::Math_Symbol, informativeAliases: ['lower rank than'])]
    case PRECEDES = "\u{227A}";

    #[Info(id: 0x227B, name: 'SUCCEEDS', category: Cat::Math_Symbol, informativeAliases: ['higher rank than'])]
    case SUCCEEDS = "\u{227B}";

    #[Info(id: 0x227C, name: 'PRECEDES OR EQUAL TO', category: Cat::Math_Symbol)]
    case PRECEDES_OR_EQUAL_TO = "\u{227C}";

    #[Info(id: 0x227D, name: 'SUCCEEDS OR EQUAL TO', category: Cat::Math_Symbol)]
    case SUCCEEDS_OR_EQUAL_TO = "\u{227D}";

    #[Info(id: 0x227E, name: 'PRECEDES OR EQUIVALENT TO', category: Cat::Math_Symbol)]
    case PRECEDES_OR_EQUIVALENT_TO = "\u{227E}";

    #[Info(id: 0x227F, name: 'SUCCEEDS OR EQUIVALENT TO', category: Cat::Math_Symbol)]
    case SUCCEEDS_OR_EQUIVALENT_TO = "\u{227F}";

    #[Info(id: 0x2280, name: 'DOES NOT PRECEDE', category: Cat::Math_Symbol)]
    case DOES_NOT_PRECEDE = "\u{2280}";

    #[Info(id: 0x2281, name: 'DOES NOT SUCCEED', category: Cat::Math_Symbol)]
    case DOES_NOT_SUCCEED = "\u{2281}";

    #[Info(id: 0x2282, name: 'SUBSET OF', category: Cat::Math_Symbol, informativeAliases: ['included in set'])]
    case SUBSET_OF = "\u{2282}";

    #[Info(id: 0x2283, name: 'SUPERSET OF', category: Cat::Math_Symbol, informativeAliases: ['includes in set'])]
    case SUPERSET_OF = "\u{2283}";

    #[Info(id: 0x2284, name: 'NOT A SUBSET OF', category: Cat::Math_Symbol)]
    case NOT_A_SUBSET_OF = "\u{2284}";

    #[Info(id: 0x2285, name: 'NOT A SUPERSET OF', category: Cat::Math_Symbol)]
    case NOT_A_SUPERSET_OF = "\u{2285}";

    #[Info(id: 0x2286, name: 'SUBSET OF OR EQUAL TO', category: Cat::Math_Symbol)]
    case SUBSET_OF_OR_EQUAL_TO = "\u{2286}";

    #[Info(id: 0x2287, name: 'SUPERSET OF OR EQUAL TO', category: Cat::Math_Symbol)]
    case SUPERSET_OF_OR_EQUAL_TO = "\u{2287}";

    #[Info(id: 0x2288, name: 'NEITHER A SUBSET OF NOR EQUAL TO', category: Cat::Math_Symbol)]
    case NEITHER_A_SUBSET_OF_NOR_EQUAL_TO = "\u{2288}";

    #[Info(id: 0x2289, name: 'NEITHER A SUPERSET OF NOR EQUAL TO', category: Cat::Math_Symbol)]
    case NEITHER_A_SUPERSET_OF_NOR_EQUAL_TO = "\u{2289}";

    #[Info(id: 0x228A, name: 'SUBSET OF WITH NOT EQUAL TO', category: Cat::Math_Symbol, unicode1Name: 'SUBSET OF OR NOT EQUAL TO')]
    case SUBSET_OF_WITH_NOT_EQUAL_TO = "\u{228A}";

    #[Info(id: 0x228B, name: 'SUPERSET OF WITH NOT EQUAL TO', category: Cat::Math_Symbol, unicode1Name: 'SUPERSET OF OR NOT EQUAL TO')]
    case SUPERSET_OF_WITH_NOT_EQUAL_TO = "\u{228B}";

    #[Info(id: 0x228C, name: 'MULTISET', category: Cat::Math_Symbol)]
    case MULTISET = "\u{228C}";

    #[Info(id: 0x228D, name: 'MULTISET MULTIPLICATION', category: Cat::Math_Symbol)]
    case MULTISET_MULTIPLICATION = "\u{228D}";

    #[Info(id: 0x228E, name: 'MULTISET UNION', category: Cat::Math_Symbol, informativeAliases: ['z notation bag addition'])]
    case MULTISET_UNION = "\u{228E}";

    #[Info(id: 0x228F, name: 'SQUARE IMAGE OF', category: Cat::Math_Symbol)]
    case SQUARE_IMAGE_OF = "\u{228F}";

    #[Info(id: 0x2290, name: 'SQUARE ORIGINAL OF', category: Cat::Math_Symbol)]
    case SQUARE_ORIGINAL_OF = "\u{2290}";

    #[Info(id: 0x2291, name: 'SQUARE IMAGE OF OR EQUAL TO', category: Cat::Math_Symbol)]
    case SQUARE_IMAGE_OF_OR_EQUAL_TO = "\u{2291}";

    #[Info(id: 0x2292, name: 'SQUARE ORIGINAL OF OR EQUAL TO', category: Cat::Math_Symbol)]
    case SQUARE_ORIGINAL_OF_OR_EQUAL_TO = "\u{2292}";

    #[Info(id: 0x2293, name: 'SQUARE CAP', category: Cat::Math_Symbol)]
    case SQUARE_CAP = "\u{2293}";

    #[Info(id: 0x2294, name: 'SQUARE CUP', category: Cat::Math_Symbol)]
    case SQUARE_CUP = "\u{2294}";

    #[Info(id: 0x2295, name: 'CIRCLED PLUS', category: Cat::Math_Symbol, informativeAliases: ['direct sum', 'vector pointing into page'])]
    case CIRCLED_PLUS = "\u{2295}";

    #[Info(id: 0x2296, name: 'CIRCLED MINUS', category: Cat::Math_Symbol, informativeAliases: ['symmetric difference'])]
    case CIRCLED_MINUS = "\u{2296}";

    #[Info(id: 0x2297, name: 'CIRCLED TIMES', category: Cat::Math_Symbol, informativeAliases: ['tensor product', 'vector pointing into page'])]
    case CIRCLED_TIMES = "\u{2297}";

    #[Info(id: 0x2298, name: 'CIRCLED DIVISION SLASH', category: Cat::Math_Symbol)]
    case CIRCLED_DIVISION_SLASH = "\u{2298}";

    #[Info(id: 0x2299, name: 'CIRCLED DOT OPERATOR', category: Cat::Math_Symbol, informativeAliases: ['direct product', 'vector pointing out of page'])]
    case CIRCLED_DOT_OPERATOR = "\u{2299}";

    #[Info(id: 0x229A, name: 'CIRCLED RING OPERATOR', category: Cat::Math_Symbol)]
    case CIRCLED_RING_OPERATOR = "\u{229A}";

    #[Info(id: 0x229B, name: 'CIRCLED ASTERISK OPERATOR', category: Cat::Math_Symbol)]
    case CIRCLED_ASTERISK_OPERATOR = "\u{229B}";

    #[Info(id: 0x229C, name: 'CIRCLED EQUALS', category: Cat::Math_Symbol, informativeAliases: ['NoDerivatives (symbol used for Creative Commons licenses)'])]
    case CIRCLED_EQUALS = "\u{229C}";

    #[Info(id: 0x229D, name: 'CIRCLED DASH', category: Cat::Math_Symbol)]
    case CIRCLED_DASH = "\u{229D}";

    #[Info(id: 0x229E, name: 'SQUARED PLUS', category: Cat::Math_Symbol)]
    case SQUARED_PLUS = "\u{229E}";

    #[Info(id: 0x229F, name: 'SQUARED MINUS', category: Cat::Math_Symbol)]
    case SQUARED_MINUS = "\u{229F}";

    #[Info(id: 0x22A0, name: 'SQUARED TIMES', category: Cat::Math_Symbol)]
    case SQUARED_TIMES = "\u{22A0}";

    #[Info(id: 0x22A1, name: 'SQUARED DOT OPERATOR', category: Cat::Math_Symbol)]
    case SQUARED_DOT_OPERATOR = "\u{22A1}";

    #[Info(id: 0x22A2, name: 'RIGHT TACK', category: Cat::Math_Symbol, informativeAliases: ['turnstile', 'proves, implies, yields', 'reducible'])]
    case RIGHT_TACK = "\u{22A2}";

    #[Info(id: 0x22A3, name: 'LEFT TACK', category: Cat::Math_Symbol, informativeAliases: ['reverse turnstile', 'non-theorem, does not yield'])]
    case LEFT_TACK = "\u{22A3}";

    #[Info(id: 0x22A4, name: 'DOWN TACK', category: Cat::Math_Symbol, informativeAliases: ['top'])]
    case DOWN_TACK = "\u{22A4}";

    #[Info(id: 0x22A5, name: 'UP TACK', category: Cat::Math_Symbol, informativeAliases: ['base, bottom'])]
    case UP_TACK = "\u{22A5}";

    #[Info(id: 0x22A6, name: 'ASSERTION', category: Cat::Math_Symbol, informativeAliases: ['reduces to'])]
    case ASSERTION = "\u{22A6}";

    #[Info(id: 0x22A7, name: 'MODELS', category: Cat::Math_Symbol)]
    case MODELS = "\u{22A7}";

    #[Info(id: 0x22A8, name: 'TRUE', category: Cat::Math_Symbol, informativeAliases: ['statement is true, valid', 'is a tautology', 'satisfies', 'results in'])]
    case TRUE = "\u{22A8}";

    #[Info(id: 0x22A9, name: 'FORCES', category: Cat::Math_Symbol)]
    case FORCES = "\u{22A9}";

    #[Info(id: 0x22AA, name: 'TRIPLE VERTICAL BAR RIGHT TURNSTILE', category: Cat::Math_Symbol)]
    case TRIPLE_VERTICAL_BAR_RIGHT_TURNSTILE = "\u{22AA}";

    #[Info(id: 0x22AB, name: 'DOUBLE VERTICAL BAR DOUBLE RIGHT TURNSTILE', category: Cat::Math_Symbol)]
    case DOUBLE_VERTICAL_BAR_DOUBLE_RIGHT_TURNSTILE = "\u{22AB}";

    #[Info(id: 0x22AC, name: 'DOES NOT PROVE', category: Cat::Math_Symbol)]
    case DOES_NOT_PROVE = "\u{22AC}";

    #[Info(id: 0x22AD, name: 'NOT TRUE', category: Cat::Math_Symbol)]
    case NOT_TRUE = "\u{22AD}";

    #[Info(id: 0x22AE, name: 'DOES NOT FORCE', category: Cat::Math_Symbol)]
    case DOES_NOT_FORCE = "\u{22AE}";

    #[Info(id: 0x22AF, name: 'NEGATED DOUBLE VERTICAL BAR DOUBLE RIGHT TURNSTILE', category: Cat::Math_Symbol)]
    case NEGATED_DOUBLE_VERTICAL_BAR_DOUBLE_RIGHT_TURNSTILE = "\u{22AF}";

    #[Info(id: 0x22B0, name: 'PRECEDES UNDER RELATION', category: Cat::Math_Symbol)]
    case PRECEDES_UNDER_RELATION = "\u{22B0}";

    #[Info(id: 0x22B1, name: 'SUCCEEDS UNDER RELATION', category: Cat::Math_Symbol)]
    case SUCCEEDS_UNDER_RELATION = "\u{22B1}";

    #[Info(id: 0x22B2, name: 'NORMAL SUBGROUP OF', category: Cat::Math_Symbol)]
    case NORMAL_SUBGROUP_OF = "\u{22B2}";

    #[Info(id: 0x22B3, name: 'CONTAINS AS NORMAL SUBGROUP', category: Cat::Math_Symbol)]
    case CONTAINS_AS_NORMAL_SUBGROUP = "\u{22B3}";

    #[Info(id: 0x22B4, name: 'NORMAL SUBGROUP OF OR EQUAL TO', category: Cat::Math_Symbol)]
    case NORMAL_SUBGROUP_OF_OR_EQUAL_TO = "\u{22B4}";

    #[Info(id: 0x22B5, name: 'CONTAINS AS NORMAL SUBGROUP OR EQUAL TO', category: Cat::Math_Symbol)]
    case CONTAINS_AS_NORMAL_SUBGROUP_OR_EQUAL_TO = "\u{22B5}";

    #[Info(id: 0x22B6, name: 'ORIGINAL OF', category: Cat::Math_Symbol)]
    case ORIGINAL_OF = "\u{22B6}";

    #[Info(id: 0x22B7, name: 'IMAGE OF', category: Cat::Math_Symbol)]
    case IMAGE_OF = "\u{22B7}";

    #[Info(id: 0x22B8, name: 'MULTIMAP', category: Cat::Math_Symbol)]
    case MULTIMAP = "\u{22B8}";

    #[Info(id: 0x22B9, name: 'HERMITIAN CONJUGATE MATRIX', category: Cat::Math_Symbol)]
    case HERMITIAN_CONJUGATE_MATRIX = "\u{22B9}";

    #[Info(id: 0x22BA, name: 'INTERCALATE', category: Cat::Math_Symbol)]
    case INTERCALATE = "\u{22BA}";

    #[Info(id: 0x22BB, name: 'XOR', category: Cat::Math_Symbol)]
    case XOR = "\u{22BB}";

    #[Info(id: 0x22BC, name: 'NAND', category: Cat::Math_Symbol)]
    case NAND = "\u{22BC}";

    #[Info(id: 0x22BD, name: 'NOR', category: Cat::Math_Symbol)]
    case NOR = "\u{22BD}";

    #[Info(id: 0x22BE, name: 'RIGHT ANGLE WITH ARC', category: Cat::Math_Symbol)]
    case RIGHT_ANGLE_WITH_ARC = "\u{22BE}";

    #[Info(id: 0x22BF, name: 'RIGHT TRIANGLE', category: Cat::Math_Symbol)]
    case RIGHT_TRIANGLE = "\u{22BF}";

    #[Info(id: 0x22C0, name: 'N-ARY LOGICAL AND', category: Cat::Math_Symbol)]
    case N_ARY_LOGICAL_AND = "\u{22C0}";

    #[Info(id: 0x22C1, name: 'N-ARY LOGICAL OR', category: Cat::Math_Symbol)]
    case N_ARY_LOGICAL_OR = "\u{22C1}";

    #[Info(id: 0x22C2, name: 'N-ARY INTERSECTION', category: Cat::Math_Symbol, informativeAliases: ['z notation generalised intersection'])]
    case N_ARY_INTERSECTION = "\u{22C2}";

    #[Info(id: 0x22C3, name: 'N-ARY UNION', category: Cat::Math_Symbol, informativeAliases: ['z notation generalised union'])]
    case N_ARY_UNION = "\u{22C3}";

    #[Info(id: 0x22C4, name: 'DIAMOND OPERATOR', category: Cat::Math_Symbol)]
    case DIAMOND_OPERATOR = "\u{22C4}";

    #[Info(id: 0x22C5, name: 'DOT OPERATOR', category: Cat::Math_Symbol)]
    case DOT_OPERATOR = "\u{22C5}";

    #[Info(id: 0x22C6, name: 'STAR OPERATOR', category: Cat::Math_Symbol)]
    case STAR_OPERATOR = "\u{22C6}";

    #[Info(id: 0x22C7, name: 'DIVISION TIMES', category: Cat::Math_Symbol)]
    case DIVISION_TIMES = "\u{22C7}";

    #[Info(id: 0x22C8, name: 'BOWTIE', category: Cat::Math_Symbol)]
    case BOWTIE = "\u{22C8}";

    #[Info(id: 0x22C9, name: 'LEFT NORMAL FACTOR SEMIDIRECT PRODUCT', category: Cat::Math_Symbol)]
    case LEFT_NORMAL_FACTOR_SEMIDIRECT_PRODUCT = "\u{22C9}";

    #[Info(id: 0x22CA, name: 'RIGHT NORMAL FACTOR SEMIDIRECT PRODUCT', category: Cat::Math_Symbol)]
    case RIGHT_NORMAL_FACTOR_SEMIDIRECT_PRODUCT = "\u{22CA}";

    #[Info(id: 0x22CB, name: 'LEFT SEMIDIRECT PRODUCT', category: Cat::Math_Symbol)]
    case LEFT_SEMIDIRECT_PRODUCT = "\u{22CB}";

    #[Info(id: 0x22CC, name: 'RIGHT SEMIDIRECT PRODUCT', category: Cat::Math_Symbol)]
    case RIGHT_SEMIDIRECT_PRODUCT = "\u{22CC}";

    #[Info(id: 0x22CD, name: 'REVERSED TILDE EQUALS', category: Cat::Math_Symbol)]
    case REVERSED_TILDE_EQUALS = "\u{22CD}";

    #[Info(id: 0x22CE, name: 'CURLY LOGICAL OR', category: Cat::Math_Symbol)]
    case CURLY_LOGICAL_OR = "\u{22CE}";

    #[Info(id: 0x22CF, name: 'CURLY LOGICAL AND', category: Cat::Math_Symbol)]
    case CURLY_LOGICAL_AND = "\u{22CF}";

    #[Info(id: 0x22D0, name: 'DOUBLE SUBSET', category: Cat::Math_Symbol)]
    case DOUBLE_SUBSET = "\u{22D0}";

    #[Info(id: 0x22D1, name: 'DOUBLE SUPERSET', category: Cat::Math_Symbol)]
    case DOUBLE_SUPERSET = "\u{22D1}";

    #[Info(id: 0x22D2, name: 'DOUBLE INTERSECTION', category: Cat::Math_Symbol)]
    case DOUBLE_INTERSECTION = "\u{22D2}";

    #[Info(id: 0x22D3, name: 'DOUBLE UNION', category: Cat::Math_Symbol)]
    case DOUBLE_UNION = "\u{22D3}";

    #[Info(id: 0x22D4, name: 'PITCHFORK', category: Cat::Math_Symbol, informativeAliases: ['proper intersection'])]
    case PITCHFORK = "\u{22D4}";

    #[Info(id: 0x22D5, name: 'EQUAL AND PARALLEL TO', category: Cat::Math_Symbol)]
    case EQUAL_AND_PARALLEL_TO = "\u{22D5}";

    #[Info(id: 0x22D6, name: 'LESS-THAN WITH DOT', category: Cat::Math_Symbol, unicode1Name: 'LESS THAN WITH DOT')]
    case LESS_THAN_WITH_DOT = "\u{22D6}";

    #[Info(id: 0x22D7, name: 'GREATER-THAN WITH DOT', category: Cat::Math_Symbol, unicode1Name: 'GREATER THAN WITH DOT')]
    case GREATER_THAN_WITH_DOT = "\u{22D7}";

    #[Info(id: 0x22D8, name: 'VERY MUCH LESS-THAN', category: Cat::Math_Symbol, unicode1Name: 'VERY MUCH LESS THAN')]
    case VERY_MUCH_LESS_THAN = "\u{22D8}";

    #[Info(id: 0x22D9, name: 'VERY MUCH GREATER-THAN', category: Cat::Math_Symbol, unicode1Name: 'VERY MUCH GREATER THAN')]
    case VERY_MUCH_GREATER_THAN = "\u{22D9}";

    #[Info(id: 0x22DA, name: 'LESS-THAN EQUAL TO OR GREATER-THAN', category: Cat::Math_Symbol, unicode1Name: 'LESS THAN EQUAL TO OR GREATER THAN')]
    case LESS_THAN_EQUAL_TO_OR_GREATER_THAN = "\u{22DA}";

    #[Info(id: 0x22DB, name: 'GREATER-THAN EQUAL TO OR LESS-THAN', category: Cat::Math_Symbol, unicode1Name: 'GREATER THAN EQUAL TO OR LESS THAN')]
    case GREATER_THAN_EQUAL_TO_OR_LESS_THAN = "\u{22DB}";

    #[Info(id: 0x22DC, name: 'EQUAL TO OR LESS-THAN', category: Cat::Math_Symbol, unicode1Name: 'EQUAL TO OR LESS THAN')]
    case EQUAL_TO_OR_LESS_THAN = "\u{22DC}";

    #[Info(id: 0x22DD, name: 'EQUAL TO OR GREATER-THAN', category: Cat::Math_Symbol, unicode1Name: 'EQUAL TO OR GREATER THAN')]
    case EQUAL_TO_OR_GREATER_THAN = "\u{22DD}";

    #[Info(id: 0x22DE, name: 'EQUAL TO OR PRECEDES', category: Cat::Math_Symbol)]
    case EQUAL_TO_OR_PRECEDES = "\u{22DE}";

    #[Info(id: 0x22DF, name: 'EQUAL TO OR SUCCEEDS', category: Cat::Math_Symbol)]
    case EQUAL_TO_OR_SUCCEEDS = "\u{22DF}";

    #[Info(id: 0x22E0, name: 'DOES NOT PRECEDE OR EQUAL', category: Cat::Math_Symbol)]
    case DOES_NOT_PRECEDE_OR_EQUAL = "\u{22E0}";

    #[Info(id: 0x22E1, name: 'DOES NOT SUCCEED OR EQUAL', category: Cat::Math_Symbol)]
    case DOES_NOT_SUCCEED_OR_EQUAL = "\u{22E1}";

    #[Info(id: 0x22E2, name: 'NOT SQUARE IMAGE OF OR EQUAL TO', category: Cat::Math_Symbol)]
    case NOT_SQUARE_IMAGE_OF_OR_EQUAL_TO = "\u{22E2}";

    #[Info(id: 0x22E3, name: 'NOT SQUARE ORIGINAL OF OR EQUAL TO', category: Cat::Math_Symbol)]
    case NOT_SQUARE_ORIGINAL_OF_OR_EQUAL_TO = "\u{22E3}";

    #[Info(id: 0x22E4, name: 'SQUARE IMAGE OF OR NOT EQUAL TO', category: Cat::Math_Symbol)]
    case SQUARE_IMAGE_OF_OR_NOT_EQUAL_TO = "\u{22E4}";

    #[Info(id: 0x22E5, name: 'SQUARE ORIGINAL OF OR NOT EQUAL TO', category: Cat::Math_Symbol)]
    case SQUARE_ORIGINAL_OF_OR_NOT_EQUAL_TO = "\u{22E5}";

    #[Info(id: 0x22E6, name: 'LESS-THAN BUT NOT EQUIVALENT TO', category: Cat::Math_Symbol, unicode1Name: 'LESS THAN BUT NOT EQUIVALENT TO')]
    case LESS_THAN_BUT_NOT_EQUIVALENT_TO = "\u{22E6}";

    #[Info(id: 0x22E7, name: 'GREATER-THAN BUT NOT EQUIVALENT TO', category: Cat::Math_Symbol, unicode1Name: 'GREATER THAN BUT NOT EQUIVALENT TO')]
    case GREATER_THAN_BUT_NOT_EQUIVALENT_TO = "\u{22E7}";

    #[Info(id: 0x22E8, name: 'PRECEDES BUT NOT EQUIVALENT TO', category: Cat::Math_Symbol)]
    case PRECEDES_BUT_NOT_EQUIVALENT_TO = "\u{22E8}";

    #[Info(id: 0x22E9, name: 'SUCCEEDS BUT NOT EQUIVALENT TO', category: Cat::Math_Symbol)]
    case SUCCEEDS_BUT_NOT_EQUIVALENT_TO = "\u{22E9}";

    #[Info(id: 0x22EA, name: 'NOT NORMAL SUBGROUP OF', category: Cat::Math_Symbol)]
    case NOT_NORMAL_SUBGROUP_OF = "\u{22EA}";

    #[Info(id: 0x22EB, name: 'DOES NOT CONTAIN AS NORMAL SUBGROUP', category: Cat::Math_Symbol)]
    case DOES_NOT_CONTAIN_AS_NORMAL_SUBGROUP = "\u{22EB}";

    #[Info(id: 0x22EC, name: 'NOT NORMAL SUBGROUP OF OR EQUAL TO', category: Cat::Math_Symbol)]
    case NOT_NORMAL_SUBGROUP_OF_OR_EQUAL_TO = "\u{22EC}";

    #[Info(id: 0x22ED, name: 'DOES NOT CONTAIN AS NORMAL SUBGROUP OR EQUAL', category: Cat::Math_Symbol)]
    case DOES_NOT_CONTAIN_AS_NORMAL_SUBGROUP_OR_EQUAL = "\u{22ED}";

    #[Info(id: 0x22EE, name: 'VERTICAL ELLIPSIS', category: Cat::Math_Symbol)]
    case VERTICAL_ELLIPSIS = "\u{22EE}";

    #[Info(id: 0x22EF, name: 'MIDLINE HORIZONTAL ELLIPSIS', category: Cat::Math_Symbol)]
    case MIDLINE_HORIZONTAL_ELLIPSIS = "\u{22EF}";

    #[Info(id: 0x22F0, name: 'UP RIGHT DIAGONAL ELLIPSIS', category: Cat::Math_Symbol)]
    case UP_RIGHT_DIAGONAL_ELLIPSIS = "\u{22F0}";

    #[Info(id: 0x22F1, name: 'DOWN RIGHT DIAGONAL ELLIPSIS', category: Cat::Math_Symbol)]
    case DOWN_RIGHT_DIAGONAL_ELLIPSIS = "\u{22F1}";

    #[Info(id: 0x22F2, name: 'ELEMENT OF WITH LONG HORIZONTAL STROKE', category: Cat::Math_Symbol)]
    case ELEMENT_OF_WITH_LONG_HORIZONTAL_STROKE = "\u{22F2}";

    #[Info(id: 0x22F3, name: 'ELEMENT OF WITH VERTICAL BAR AT END OF HORIZONTAL STROKE', category: Cat::Math_Symbol)]
    case ELEMENT_OF_WITH_VERTICAL_BAR_AT_END_OF_HORIZONTAL_STROKE = "\u{22F3}";

    #[Info(id: 0x22F4, name: 'SMALL ELEMENT OF WITH VERTICAL BAR AT END OF HORIZONTAL STROKE', category: Cat::Math_Symbol)]
    case SMALL_ELEMENT_OF_WITH_VERTICAL_BAR_AT_END_OF_HORIZONTAL_STROKE = "\u{22F4}";

    #[Info(id: 0x22F5, name: 'ELEMENT OF WITH DOT ABOVE', category: Cat::Math_Symbol)]
    case ELEMENT_OF_WITH_DOT_ABOVE = "\u{22F5}";

    #[Info(id: 0x22F6, name: 'ELEMENT OF WITH OVERBAR', category: Cat::Math_Symbol)]
    case ELEMENT_OF_WITH_OVERBAR = "\u{22F6}";

    #[Info(id: 0x22F7, name: 'SMALL ELEMENT OF WITH OVERBAR', category: Cat::Math_Symbol)]
    case SMALL_ELEMENT_OF_WITH_OVERBAR = "\u{22F7}";

    #[Info(id: 0x22F8, name: 'ELEMENT OF WITH UNDERBAR', category: Cat::Math_Symbol)]
    case ELEMENT_OF_WITH_UNDERBAR = "\u{22F8}";

    #[Info(id: 0x22F9, name: 'ELEMENT OF WITH TWO HORIZONTAL STROKES', category: Cat::Math_Symbol)]
    case ELEMENT_OF_WITH_TWO_HORIZONTAL_STROKES = "\u{22F9}";

    #[Info(id: 0x22FA, name: 'CONTAINS WITH LONG HORIZONTAL STROKE', category: Cat::Math_Symbol)]
    case CONTAINS_WITH_LONG_HORIZONTAL_STROKE = "\u{22FA}";

    #[Info(id: 0x22FB, name: 'CONTAINS WITH VERTICAL BAR AT END OF HORIZONTAL STROKE', category: Cat::Math_Symbol)]
    case CONTAINS_WITH_VERTICAL_BAR_AT_END_OF_HORIZONTAL_STROKE = "\u{22FB}";

    #[Info(id: 0x22FC, name: 'SMALL CONTAINS WITH VERTICAL BAR AT END OF HORIZONTAL STROKE', category: Cat::Math_Symbol)]
    case SMALL_CONTAINS_WITH_VERTICAL_BAR_AT_END_OF_HORIZONTAL_STROKE = "\u{22FC}";

    #[Info(id: 0x22FD, name: 'CONTAINS WITH OVERBAR', category: Cat::Math_Symbol)]
    case CONTAINS_WITH_OVERBAR = "\u{22FD}";

    #[Info(id: 0x22FE, name: 'SMALL CONTAINS WITH OVERBAR', category: Cat::Math_Symbol)]
    case SMALL_CONTAINS_WITH_OVERBAR = "\u{22FE}";

    #[Info(id: 0x22FF, name: 'Z NOTATION BAG MEMBERSHIP', category: Cat::Math_Symbol)]
    case Z_NOTATION_BAG_MEMBERSHIP = "\u{22FF}";
}
