<?php

/*
 * Please DO NOT edit this file manually!
 * It has been generated automatically by MLUnipoints\Build\CodepointsBuilder
 */

declare(strict_types=1);

namespace MLUnipoints\Codepoint;

use MLUnipoints\Category as Cat;
use MLUnipoints\Info\CodepointInfo as Info;
use MLUnipoints\Info\UnicodeInfo;

#[UnicodeInfo(unicodeVersion: '16.0.0')]
enum Basic_Latin: string
{
    #[Info(id: 0x0, name: 'NULL', category: Cat::Control, abbreviations: ['NUL'])]
    case NULL = "\u{0}";

    #[Info(id: 0x1, name: 'START OF HEADING', category: Cat::Control, abbreviations: ['SOH'])]
    case START_OF_HEADING = "\u{1}";

    #[Info(id: 0x2, name: 'START OF TEXT', category: Cat::Control, abbreviations: ['STX'])]
    case START_OF_TEXT = "\u{2}";

    #[Info(id: 0x3, name: 'END OF TEXT', category: Cat::Control, abbreviations: ['ETX'])]
    case END_OF_TEXT = "\u{3}";

    #[Info(id: 0x4, name: 'END OF TRANSMISSION', category: Cat::Control, abbreviations: ['EOT'])]
    case END_OF_TRANSMISSION = "\u{4}";

    #[Info(id: 0x5, name: 'ENQUIRY', category: Cat::Control, abbreviations: ['ENQ'])]
    case ENQUIRY = "\u{5}";

    #[Info(id: 0x6, name: 'ACKNOWLEDGE', category: Cat::Control, abbreviations: ['ACK'])]
    case ACKNOWLEDGE = "\u{6}";

    #[Info(id: 0x7, name: 'ALERT', category: Cat::Control, unicode1Name: 'BELL', abbreviations: ['BEL'])]
    case ALERT = "\u{7}";

    #[Info(id: 0x8, name: 'BACKSPACE', category: Cat::Control, abbreviations: ['BS'])]
    case BACKSPACE = "\u{8}";

    #[Info(id: 0x9, name: 'CHARACTER TABULATION', category: Cat::Control, controlNames: ['HORIZONTAL TABULATION'], abbreviations: ['HT', 'TAB'], informativeAliases: ['horizontal tabulation (HT)'])]
    case CHARACTER_TABULATION = "\u{9}";

    #[Info(id: 0xA, name: 'LINE FEED', category: Cat::Control, unicode1Name: 'LINE FEED (LF)', controlNames: ['NEW LINE', 'END OF LINE'], abbreviations: ['LF', 'NL', 'EOL'], informativeAliases: ['new line (NL)', 'end of line (EOL)'])]
    case LINE_FEED = "\u{A}";

    #[Info(id: 0xB, name: 'LINE TABULATION', category: Cat::Control, controlNames: ['VERTICAL TABULATION'], abbreviations: ['VT'], informativeAliases: ['vertical tabulation (VT)'])]
    case LINE_TABULATION = "\u{B}";

    #[Info(id: 0xC, name: 'FORM FEED', category: Cat::Control, unicode1Name: 'FORM FEED (FF)', abbreviations: ['FF'])]
    case FORM_FEED = "\u{C}";

    #[Info(id: 0xD, name: 'CARRIAGE RETURN', category: Cat::Control, unicode1Name: 'CARRIAGE RETURN (CR)', abbreviations: ['CR'])]
    case CARRIAGE_RETURN = "\u{D}";

    #[Info(id: 0xE, name: 'SHIFT OUT', category: Cat::Control, controlNames: ['LOCKING-SHIFT ONE'], abbreviations: ['SO'])]
    case SHIFT_OUT = "\u{E}";

    #[Info(id: 0xF, name: 'SHIFT IN', category: Cat::Control, controlNames: ['LOCKING-SHIFT ZERO'], abbreviations: ['SI'])]
    case SHIFT_IN = "\u{F}";

    #[Info(id: 0x10, name: 'DATA LINK ESCAPE', category: Cat::Control, abbreviations: ['DLE'])]
    case DATA_LINK_ESCAPE = "\u{10}";

    #[Info(id: 0x11, name: 'DEVICE CONTROL ONE', category: Cat::Control, abbreviations: ['DC1'])]
    case DEVICE_CONTROL_ONE = "\u{11}";

    #[Info(id: 0x12, name: 'DEVICE CONTROL TWO', category: Cat::Control, abbreviations: ['DC2'])]
    case DEVICE_CONTROL_TWO = "\u{12}";

    #[Info(id: 0x13, name: 'DEVICE CONTROL THREE', category: Cat::Control, abbreviations: ['DC3'])]
    case DEVICE_CONTROL_THREE = "\u{13}";

    #[Info(id: 0x14, name: 'DEVICE CONTROL FOUR', category: Cat::Control, abbreviations: ['DC4'])]
    case DEVICE_CONTROL_FOUR = "\u{14}";

    #[Info(id: 0x15, name: 'NEGATIVE ACKNOWLEDGE', category: Cat::Control, abbreviations: ['NAK'])]
    case NEGATIVE_ACKNOWLEDGE = "\u{15}";

    #[Info(id: 0x16, name: 'SYNCHRONOUS IDLE', category: Cat::Control, abbreviations: ['SYN'])]
    case SYNCHRONOUS_IDLE = "\u{16}";

    #[Info(id: 0x17, name: 'END OF TRANSMISSION BLOCK', category: Cat::Control, abbreviations: ['ETB'])]
    case END_OF_TRANSMISSION_BLOCK = "\u{17}";

    #[Info(id: 0x18, name: 'CANCEL', category: Cat::Control, abbreviations: ['CAN'])]
    case CANCEL = "\u{18}";

    #[Info(id: 0x19, name: 'END OF MEDIUM', category: Cat::Control, abbreviations: ['EOM', 'EM'])]
    case END_OF_MEDIUM = "\u{19}";

    #[Info(id: 0x1A, name: 'SUBSTITUTE', category: Cat::Control, abbreviations: ['SUB'])]
    case SUBSTITUTE = "\u{1A}";

    #[Info(id: 0x1B, name: 'ESCAPE', category: Cat::Control, abbreviations: ['ESC'])]
    case ESCAPE = "\u{1B}";

    #[Info(id: 0x1C, name: 'INFORMATION SEPARATOR FOUR', category: Cat::Control, controlNames: ['FILE SEPARATOR'], abbreviations: ['FS'], informativeAliases: ['file separator (FS)'])]
    case INFORMATION_SEPARATOR_FOUR = "\u{1C}";

    #[Info(id: 0x1D, name: 'INFORMATION SEPARATOR THREE', category: Cat::Control, controlNames: ['GROUP SEPARATOR'], abbreviations: ['GS'], informativeAliases: ['group separator (GS)'])]
    case INFORMATION_SEPARATOR_THREE = "\u{1D}";

    #[Info(id: 0x1E, name: 'INFORMATION SEPARATOR TWO', category: Cat::Control, controlNames: ['RECORD SEPARATOR'], abbreviations: ['RS'], informativeAliases: ['record separator (RS)'])]
    case INFORMATION_SEPARATOR_TWO = "\u{1E}";

    #[Info(id: 0x1F, name: 'INFORMATION SEPARATOR ONE', category: Cat::Control, controlNames: ['UNIT SEPARATOR'], abbreviations: ['US'], informativeAliases: ['unit separator (US)'])]
    case INFORMATION_SEPARATOR_ONE = "\u{1F}";

    #[Info(id: 0x20, name: 'SPACE', category: Cat::Space_Separator, abbreviations: ['SP'])]
    case SPACE = "\u{20}";

    #[Info(id: 0x21, name: 'EXCLAMATION MARK', category: Cat::Other_Punctuation, informativeAliases: ['factorial', 'bang'])]
    case EXCLAMATION_MARK = "\u{21}";

    #[Info(id: 0x22, name: 'QUOTATION MARK', category: Cat::Other_Punctuation, informativeAliases: ['double quote'])]
    case QUOTATION_MARK = "\u{22}";

    #[Info(id: 0x23, name: 'NUMBER SIGN', category: Cat::Other_Punctuation, informativeAliases: ['pound sign (weight)', 'hashtag, hash', 'crosshatch, octothorpe'])]
    case NUMBER_SIGN = "\u{23}";

    #[Info(id: 0x24, name: 'DOLLAR SIGN', category: Cat::Currency_Symbol, informativeAliases: ['milréis, escudo'])]
    case DOLLAR_SIGN = "\u{24}";

    #[Info(id: 0x25, name: 'PERCENT SIGN', category: Cat::Other_Punctuation)]
    case PERCENT_SIGN = "\u{25}";

    #[Info(id: 0x26, name: 'AMPERSAND', category: Cat::Other_Punctuation, informativeAliases: ['and'])]
    case AMPERSAND = "\u{26}";

    #[Info(id: 0x27, name: 'APOSTROPHE', category: Cat::Other_Punctuation, unicode1Name: 'APOSTROPHE-QUOTE', informativeAliases: ['apostrophe-quote (1.0)', 'single quote', 'APL quote'])]
    case APOSTROPHE = "\u{27}";

    #[Info(id: 0x28, name: 'LEFT PARENTHESIS', category: Cat::Open_Punctuation, unicode1Name: 'OPENING PARENTHESIS', informativeAliases: ['opening parenthesis (1.0)'])]
    case LEFT_PARENTHESIS = "\u{28}";

    #[Info(id: 0x29, name: 'RIGHT PARENTHESIS', category: Cat::Close_Punctuation, unicode1Name: 'CLOSING PARENTHESIS', informativeAliases: ['closing parenthesis (1.0)'])]
    case RIGHT_PARENTHESIS = "\u{29}";

    #[Info(id: 0x2A, name: 'ASTERISK', category: Cat::Other_Punctuation, informativeAliases: ['star'])]
    case ASTERISK = "\u{2A}";

    #[Info(id: 0x2B, name: 'PLUS SIGN', category: Cat::Math_Symbol)]
    case PLUS_SIGN = "\u{2B}";

    #[Info(id: 0x2C, name: 'COMMA', category: Cat::Other_Punctuation, informativeAliases: ['the use as decimal or thousands separator is locale dependent'])]
    case COMMA = "\u{2C}";

    #[Info(id: 0x2D, name: 'HYPHEN-MINUS', category: Cat::Dash_Punctuation, informativeAliases: ['hyphen, dash', 'minus sign'])]
    case HYPHEN_MINUS = "\u{2D}";

    #[Info(id: 0x2E, name: 'FULL STOP', category: Cat::Other_Punctuation, unicode1Name: 'PERIOD', informativeAliases: ['period, dot, decimal point'])]
    case FULL_STOP = "\u{2E}";

    #[Info(id: 0x2F, name: 'SOLIDUS', category: Cat::Other_Punctuation, unicode1Name: 'SLASH', informativeAliases: ['slash, forward slash, virgule'])]
    case SOLIDUS = "\u{2F}";

    #[Info(id: 0x30, name: 'DIGIT ZERO', category: Cat::Decimal_Number)]
    case DIGIT_ZERO = "\u{30}";

    #[Info(id: 0x31, name: 'DIGIT ONE', category: Cat::Decimal_Number)]
    case DIGIT_ONE = "\u{31}";

    #[Info(id: 0x32, name: 'DIGIT TWO', category: Cat::Decimal_Number)]
    case DIGIT_TWO = "\u{32}";

    #[Info(id: 0x33, name: 'DIGIT THREE', category: Cat::Decimal_Number)]
    case DIGIT_THREE = "\u{33}";

    #[Info(id: 0x34, name: 'DIGIT FOUR', category: Cat::Decimal_Number)]
    case DIGIT_FOUR = "\u{34}";

    #[Info(id: 0x35, name: 'DIGIT FIVE', category: Cat::Decimal_Number)]
    case DIGIT_FIVE = "\u{35}";

    #[Info(id: 0x36, name: 'DIGIT SIX', category: Cat::Decimal_Number)]
    case DIGIT_SIX = "\u{36}";

    #[Info(id: 0x37, name: 'DIGIT SEVEN', category: Cat::Decimal_Number)]
    case DIGIT_SEVEN = "\u{37}";

    #[Info(id: 0x38, name: 'DIGIT EIGHT', category: Cat::Decimal_Number)]
    case DIGIT_EIGHT = "\u{38}";

    #[Info(id: 0x39, name: 'DIGIT NINE', category: Cat::Decimal_Number)]
    case DIGIT_NINE = "\u{39}";

    #[Info(id: 0x3A, name: 'COLON', category: Cat::Other_Punctuation)]
    case COLON = "\u{3A}";

    #[Info(id: 0x3B, name: 'SEMICOLON', category: Cat::Other_Punctuation)]
    case SEMICOLON = "\u{3B}";

    #[Info(id: 0x3C, name: 'LESS-THAN SIGN', category: Cat::Math_Symbol)]
    case LESS_THAN_SIGN = "\u{3C}";

    #[Info(id: 0x3D, name: 'EQUALS SIGN', category: Cat::Math_Symbol)]
    case EQUALS_SIGN = "\u{3D}";

    #[Info(id: 0x3E, name: 'GREATER-THAN SIGN', category: Cat::Math_Symbol)]
    case GREATER_THAN_SIGN = "\u{3E}";

    #[Info(id: 0x3F, name: 'QUESTION MARK', category: Cat::Other_Punctuation)]
    case QUESTION_MARK = "\u{3F}";

    #[Info(id: 0x40, name: 'COMMERCIAL AT', category: Cat::Other_Punctuation, informativeAliases: ['at sign', 'arroba (old Spanish unit of weight)'])]
    case COMMERCIAL_AT = "\u{40}";

    #[Info(id: 0x41, name: 'LATIN CAPITAL LETTER A', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_A = "\u{41}";

    #[Info(id: 0x42, name: 'LATIN CAPITAL LETTER B', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_B = "\u{42}";

    #[Info(id: 0x43, name: 'LATIN CAPITAL LETTER C', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_C = "\u{43}";

    #[Info(id: 0x44, name: 'LATIN CAPITAL LETTER D', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_D = "\u{44}";

    #[Info(id: 0x45, name: 'LATIN CAPITAL LETTER E', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_E = "\u{45}";

    #[Info(id: 0x46, name: 'LATIN CAPITAL LETTER F', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_F = "\u{46}";

    #[Info(id: 0x47, name: 'LATIN CAPITAL LETTER G', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_G = "\u{47}";

    #[Info(id: 0x48, name: 'LATIN CAPITAL LETTER H', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_H = "\u{48}";

    #[Info(id: 0x49, name: 'LATIN CAPITAL LETTER I', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_I = "\u{49}";

    #[Info(id: 0x4A, name: 'LATIN CAPITAL LETTER J', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_J = "\u{4A}";

    #[Info(id: 0x4B, name: 'LATIN CAPITAL LETTER K', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_K = "\u{4B}";

    #[Info(id: 0x4C, name: 'LATIN CAPITAL LETTER L', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_L = "\u{4C}";

    #[Info(id: 0x4D, name: 'LATIN CAPITAL LETTER M', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_M = "\u{4D}";

    #[Info(id: 0x4E, name: 'LATIN CAPITAL LETTER N', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_N = "\u{4E}";

    #[Info(id: 0x4F, name: 'LATIN CAPITAL LETTER O', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_O = "\u{4F}";

    #[Info(id: 0x50, name: 'LATIN CAPITAL LETTER P', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_P = "\u{50}";

    #[Info(id: 0x51, name: 'LATIN CAPITAL LETTER Q', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_Q = "\u{51}";

    #[Info(id: 0x52, name: 'LATIN CAPITAL LETTER R', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_R = "\u{52}";

    #[Info(id: 0x53, name: 'LATIN CAPITAL LETTER S', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_S = "\u{53}";

    #[Info(id: 0x54, name: 'LATIN CAPITAL LETTER T', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_T = "\u{54}";

    #[Info(id: 0x55, name: 'LATIN CAPITAL LETTER U', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_U = "\u{55}";

    #[Info(id: 0x56, name: 'LATIN CAPITAL LETTER V', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_V = "\u{56}";

    #[Info(id: 0x57, name: 'LATIN CAPITAL LETTER W', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_W = "\u{57}";

    #[Info(id: 0x58, name: 'LATIN CAPITAL LETTER X', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_X = "\u{58}";

    #[Info(id: 0x59, name: 'LATIN CAPITAL LETTER Y', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_Y = "\u{59}";

    #[Info(id: 0x5A, name: 'LATIN CAPITAL LETTER Z', category: Cat::Uppercase_Letter)]
    case LATIN_CAPITAL_LETTER_Z = "\u{5A}";

    #[Info(id: 0x5B, name: 'LEFT SQUARE BRACKET', category: Cat::Open_Punctuation, unicode1Name: 'OPENING SQUARE BRACKET', informativeAliases: ['opening square bracket (1.0)'])]
    case LEFT_SQUARE_BRACKET = "\u{5B}";

    #[Info(id: 0x5C, name: 'REVERSE SOLIDUS', category: Cat::Other_Punctuation, unicode1Name: 'BACKSLASH')]
    case REVERSE_SOLIDUS = "\u{5C}";

    #[Info(id: 0x5D, name: 'RIGHT SQUARE BRACKET', category: Cat::Close_Punctuation, unicode1Name: 'CLOSING SQUARE BRACKET', informativeAliases: ['closing square bracket (1.0)'])]
    case RIGHT_SQUARE_BRACKET = "\u{5D}";

    #[Info(id: 0x5E, name: 'CIRCUMFLEX ACCENT', category: Cat::Modifier_Symbol, unicode1Name: 'SPACING CIRCUMFLEX')]
    case CIRCUMFLEX_ACCENT = "\u{5E}";

    #[Info(id: 0x5F, name: 'LOW LINE', category: Cat::Connector_Punctuation, unicode1Name: 'SPACING UNDERSCORE', informativeAliases: ['spacing underscore (1.0)'])]
    case LOW_LINE = "\u{5F}";

    #[Info(id: 0x60, name: 'GRAVE ACCENT', category: Cat::Modifier_Symbol, unicode1Name: 'SPACING GRAVE', informativeAliases: ['backtick, backquote'])]
    case GRAVE_ACCENT = "\u{60}";

    #[Info(id: 0x61, name: 'LATIN SMALL LETTER A', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_A = "\u{61}";

    #[Info(id: 0x62, name: 'LATIN SMALL LETTER B', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_B = "\u{62}";

    #[Info(id: 0x63, name: 'LATIN SMALL LETTER C', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_C = "\u{63}";

    #[Info(id: 0x64, name: 'LATIN SMALL LETTER D', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_D = "\u{64}";

    #[Info(id: 0x65, name: 'LATIN SMALL LETTER E', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_E = "\u{65}";

    #[Info(id: 0x66, name: 'LATIN SMALL LETTER F', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_F = "\u{66}";

    #[Info(id: 0x67, name: 'LATIN SMALL LETTER G', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_G = "\u{67}";

    #[Info(id: 0x68, name: 'LATIN SMALL LETTER H', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_H = "\u{68}";

    #[Info(id: 0x69, name: 'LATIN SMALL LETTER I', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_I = "\u{69}";

    #[Info(id: 0x6A, name: 'LATIN SMALL LETTER J', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_J = "\u{6A}";

    #[Info(id: 0x6B, name: 'LATIN SMALL LETTER K', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_K = "\u{6B}";

    #[Info(id: 0x6C, name: 'LATIN SMALL LETTER L', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_L = "\u{6C}";

    #[Info(id: 0x6D, name: 'LATIN SMALL LETTER M', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_M = "\u{6D}";

    #[Info(id: 0x6E, name: 'LATIN SMALL LETTER N', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_N = "\u{6E}";

    #[Info(id: 0x6F, name: 'LATIN SMALL LETTER O', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_O = "\u{6F}";

    #[Info(id: 0x70, name: 'LATIN SMALL LETTER P', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_P = "\u{70}";

    #[Info(id: 0x71, name: 'LATIN SMALL LETTER Q', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_Q = "\u{71}";

    #[Info(id: 0x72, name: 'LATIN SMALL LETTER R', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_R = "\u{72}";

    #[Info(id: 0x73, name: 'LATIN SMALL LETTER S', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_S = "\u{73}";

    #[Info(id: 0x74, name: 'LATIN SMALL LETTER T', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_T = "\u{74}";

    #[Info(id: 0x75, name: 'LATIN SMALL LETTER U', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_U = "\u{75}";

    #[Info(id: 0x76, name: 'LATIN SMALL LETTER V', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_V = "\u{76}";

    #[Info(id: 0x77, name: 'LATIN SMALL LETTER W', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_W = "\u{77}";

    #[Info(id: 0x78, name: 'LATIN SMALL LETTER X', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_X = "\u{78}";

    #[Info(id: 0x79, name: 'LATIN SMALL LETTER Y', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_Y = "\u{79}";

    #[Info(id: 0x7A, name: 'LATIN SMALL LETTER Z', category: Cat::Lowercase_Letter)]
    case LATIN_SMALL_LETTER_Z = "\u{7A}";

    #[Info(id: 0x7B, name: 'LEFT CURLY BRACKET', category: Cat::Open_Punctuation, unicode1Name: 'OPENING CURLY BRACKET', informativeAliases: ['opening curly bracket (1.0)', 'left brace'])]
    case LEFT_CURLY_BRACKET = "\u{7B}";

    #[Info(id: 0x7C, name: 'VERTICAL LINE', category: Cat::Math_Symbol, unicode1Name: 'VERTICAL BAR', informativeAliases: ['vertical bar, pipe'])]
    case VERTICAL_LINE = "\u{7C}";

    #[Info(id: 0x7D, name: 'RIGHT CURLY BRACKET', category: Cat::Close_Punctuation, unicode1Name: 'CLOSING CURLY BRACKET', informativeAliases: ['closing curly bracket (1.0)', 'right brace'])]
    case RIGHT_CURLY_BRACKET = "\u{7D}";

    #[Info(id: 0x7E, name: 'TILDE', category: Cat::Math_Symbol)]
    case TILDE = "\u{7E}";

    #[Info(id: 0x7F, name: 'DELETE', category: Cat::Control, abbreviations: ['DEL'])]
    case DELETE = "\u{7F}";
}
