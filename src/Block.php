<?php

/*
 * Please DO NOT edit this file manually!
 * It has been generated automatically by MLUnipoints\Build\BlocksBuilder
 */

declare(strict_types=1);

namespace MLUnipoints;

use MLUnipoints\Info\BlockInfo;
use MLUnipoints\Info\UnicodeInfo;

#[UnicodeInfo(unicodeVersion: '16.0.0')]
enum Block
{
    // Blocks for plane 0 (Basic Multilingual Plane}

    #[BlockInfo(fromCodepoint: 0x0, toCodepoint: 0x7F, name: 'Basic Latin', plane: Plane::Plane0)]
    case Basic_Latin;

    #[BlockInfo(fromCodepoint: 0x80, toCodepoint: 0xFF, name: 'Latin-1 Supplement', plane: Plane::Plane0)]
    case Latin1_Supplement;

    #[BlockInfo(fromCodepoint: 0x100, toCodepoint: 0x17F, name: 'Latin Extended-A', plane: Plane::Plane0)]
    case Latin_ExtendedA;

    #[BlockInfo(fromCodepoint: 0x180, toCodepoint: 0x24F, name: 'Latin Extended-B', plane: Plane::Plane0)]
    case Latin_ExtendedB;

    #[BlockInfo(fromCodepoint: 0x250, toCodepoint: 0x2AF, name: 'IPA Extensions', plane: Plane::Plane0)]
    case IPA_Extensions;

    #[BlockInfo(fromCodepoint: 0x2B0, toCodepoint: 0x2FF, name: 'Spacing Modifier Letters', plane: Plane::Plane0)]
    case Spacing_Modifier_Letters;

    #[BlockInfo(fromCodepoint: 0x300, toCodepoint: 0x36F, name: 'Combining Diacritical Marks', plane: Plane::Plane0)]
    case Combining_Diacritical_Marks;

    #[BlockInfo(fromCodepoint: 0x370, toCodepoint: 0x3FF, name: 'Greek and Coptic', plane: Plane::Plane0)]
    case Greek_and_Coptic;

    #[BlockInfo(fromCodepoint: 0x400, toCodepoint: 0x4FF, name: 'Cyrillic', plane: Plane::Plane0)]
    case Cyrillic;

    #[BlockInfo(fromCodepoint: 0x500, toCodepoint: 0x52F, name: 'Cyrillic Supplement', plane: Plane::Plane0)]
    case Cyrillic_Supplement;

    #[BlockInfo(fromCodepoint: 0x530, toCodepoint: 0x58F, name: 'Armenian', plane: Plane::Plane0)]
    case Armenian;

    #[BlockInfo(fromCodepoint: 0x590, toCodepoint: 0x5FF, name: 'Hebrew', plane: Plane::Plane0)]
    case Hebrew;

    #[BlockInfo(fromCodepoint: 0x600, toCodepoint: 0x6FF, name: 'Arabic', plane: Plane::Plane0)]
    case Arabic;

    #[BlockInfo(fromCodepoint: 0x700, toCodepoint: 0x74F, name: 'Syriac', plane: Plane::Plane0)]
    case Syriac;

    #[BlockInfo(fromCodepoint: 0x750, toCodepoint: 0x77F, name: 'Arabic Supplement', plane: Plane::Plane0)]
    case Arabic_Supplement;

    #[BlockInfo(fromCodepoint: 0x780, toCodepoint: 0x7BF, name: 'Thaana', plane: Plane::Plane0)]
    case Thaana;

    #[BlockInfo(fromCodepoint: 0x7C0, toCodepoint: 0x7FF, name: 'NKo', plane: Plane::Plane0)]
    case NKo;

    #[BlockInfo(fromCodepoint: 0x800, toCodepoint: 0x83F, name: 'Samaritan', plane: Plane::Plane0)]
    case Samaritan;

    #[BlockInfo(fromCodepoint: 0x840, toCodepoint: 0x85F, name: 'Mandaic', plane: Plane::Plane0)]
    case Mandaic;

    #[BlockInfo(fromCodepoint: 0x860, toCodepoint: 0x86F, name: 'Syriac Supplement', plane: Plane::Plane0)]
    case Syriac_Supplement;

    #[BlockInfo(fromCodepoint: 0x870, toCodepoint: 0x89F, name: 'Arabic Extended-B', plane: Plane::Plane0)]
    case Arabic_ExtendedB;

    #[BlockInfo(fromCodepoint: 0x8A0, toCodepoint: 0x8FF, name: 'Arabic Extended-A', plane: Plane::Plane0)]
    case Arabic_ExtendedA;

    #[BlockInfo(fromCodepoint: 0x900, toCodepoint: 0x97F, name: 'Devanagari', plane: Plane::Plane0)]
    case Devanagari;

    #[BlockInfo(fromCodepoint: 0x980, toCodepoint: 0x9FF, name: 'Bengali', plane: Plane::Plane0)]
    case Bengali;

    #[BlockInfo(fromCodepoint: 0xA00, toCodepoint: 0xA7F, name: 'Gurmukhi', plane: Plane::Plane0)]
    case Gurmukhi;

    #[BlockInfo(fromCodepoint: 0xA80, toCodepoint: 0xAFF, name: 'Gujarati', plane: Plane::Plane0)]
    case Gujarati;

    #[BlockInfo(fromCodepoint: 0xB00, toCodepoint: 0xB7F, name: 'Oriya', plane: Plane::Plane0)]
    case Oriya;

    #[BlockInfo(fromCodepoint: 0xB80, toCodepoint: 0xBFF, name: 'Tamil', plane: Plane::Plane0)]
    case Tamil;

    #[BlockInfo(fromCodepoint: 0xC00, toCodepoint: 0xC7F, name: 'Telugu', plane: Plane::Plane0)]
    case Telugu;

    #[BlockInfo(fromCodepoint: 0xC80, toCodepoint: 0xCFF, name: 'Kannada', plane: Plane::Plane0)]
    case Kannada;

    #[BlockInfo(fromCodepoint: 0xD00, toCodepoint: 0xD7F, name: 'Malayalam', plane: Plane::Plane0)]
    case Malayalam;

    #[BlockInfo(fromCodepoint: 0xD80, toCodepoint: 0xDFF, name: 'Sinhala', plane: Plane::Plane0)]
    case Sinhala;

    #[BlockInfo(fromCodepoint: 0xE00, toCodepoint: 0xE7F, name: 'Thai', plane: Plane::Plane0)]
    case Thai;

    #[BlockInfo(fromCodepoint: 0xE80, toCodepoint: 0xEFF, name: 'Lao', plane: Plane::Plane0)]
    case Lao;

    #[BlockInfo(fromCodepoint: 0xF00, toCodepoint: 0xFFF, name: 'Tibetan', plane: Plane::Plane0)]
    case Tibetan;

    #[BlockInfo(fromCodepoint: 0x1000, toCodepoint: 0x109F, name: 'Myanmar', plane: Plane::Plane0)]
    case Myanmar;

    #[BlockInfo(fromCodepoint: 0x10A0, toCodepoint: 0x10FF, name: 'Georgian', plane: Plane::Plane0)]
    case Georgian;

    #[BlockInfo(fromCodepoint: 0x1100, toCodepoint: 0x11FF, name: 'Hangul Jamo', plane: Plane::Plane0)]
    case Hangul_Jamo;

    #[BlockInfo(fromCodepoint: 0x1200, toCodepoint: 0x137F, name: 'Ethiopic', plane: Plane::Plane0)]
    case Ethiopic;

    #[BlockInfo(fromCodepoint: 0x1380, toCodepoint: 0x139F, name: 'Ethiopic Supplement', plane: Plane::Plane0)]
    case Ethiopic_Supplement;

    #[BlockInfo(fromCodepoint: 0x13A0, toCodepoint: 0x13FF, name: 'Cherokee', plane: Plane::Plane0)]
    case Cherokee;

    #[BlockInfo(fromCodepoint: 0x1400, toCodepoint: 0x167F, name: 'Unified Canadian Aboriginal Syllabics', plane: Plane::Plane0)]
    case Unified_Canadian_Aboriginal_Syllabics;

    #[BlockInfo(fromCodepoint: 0x1680, toCodepoint: 0x169F, name: 'Ogham', plane: Plane::Plane0)]
    case Ogham;

    #[BlockInfo(fromCodepoint: 0x16A0, toCodepoint: 0x16FF, name: 'Runic', plane: Plane::Plane0)]
    case Runic;

    #[BlockInfo(fromCodepoint: 0x1700, toCodepoint: 0x171F, name: 'Tagalog', plane: Plane::Plane0)]
    case Tagalog;

    #[BlockInfo(fromCodepoint: 0x1720, toCodepoint: 0x173F, name: 'Hanunoo', plane: Plane::Plane0)]
    case Hanunoo;

    #[BlockInfo(fromCodepoint: 0x1740, toCodepoint: 0x175F, name: 'Buhid', plane: Plane::Plane0)]
    case Buhid;

    #[BlockInfo(fromCodepoint: 0x1760, toCodepoint: 0x177F, name: 'Tagbanwa', plane: Plane::Plane0)]
    case Tagbanwa;

    #[BlockInfo(fromCodepoint: 0x1780, toCodepoint: 0x17FF, name: 'Khmer', plane: Plane::Plane0)]
    case Khmer;

    #[BlockInfo(fromCodepoint: 0x1800, toCodepoint: 0x18AF, name: 'Mongolian', plane: Plane::Plane0)]
    case Mongolian;

    #[BlockInfo(fromCodepoint: 0x18B0, toCodepoint: 0x18FF, name: 'Unified Canadian Aboriginal Syllabics Extended', plane: Plane::Plane0)]
    case Unified_Canadian_Aboriginal_Syllabics_Extended;

    #[BlockInfo(fromCodepoint: 0x1900, toCodepoint: 0x194F, name: 'Limbu', plane: Plane::Plane0)]
    case Limbu;

    #[BlockInfo(fromCodepoint: 0x1950, toCodepoint: 0x197F, name: 'Tai Le', plane: Plane::Plane0)]
    case Tai_Le;

    #[BlockInfo(fromCodepoint: 0x1980, toCodepoint: 0x19DF, name: 'New Tai Lue', plane: Plane::Plane0)]
    case New_Tai_Lue;

    #[BlockInfo(fromCodepoint: 0x19E0, toCodepoint: 0x19FF, name: 'Khmer Symbols', plane: Plane::Plane0)]
    case Khmer_Symbols;

    #[BlockInfo(fromCodepoint: 0x1A00, toCodepoint: 0x1A1F, name: 'Buginese', plane: Plane::Plane0)]
    case Buginese;

    #[BlockInfo(fromCodepoint: 0x1A20, toCodepoint: 0x1AAF, name: 'Tai Tham', plane: Plane::Plane0)]
    case Tai_Tham;

    #[BlockInfo(fromCodepoint: 0x1AB0, toCodepoint: 0x1AFF, name: 'Combining Diacritical Marks Extended', plane: Plane::Plane0)]
    case Combining_Diacritical_Marks_Extended;

    #[BlockInfo(fromCodepoint: 0x1B00, toCodepoint: 0x1B7F, name: 'Balinese', plane: Plane::Plane0)]
    case Balinese;

    #[BlockInfo(fromCodepoint: 0x1B80, toCodepoint: 0x1BBF, name: 'Sundanese', plane: Plane::Plane0)]
    case Sundanese;

    #[BlockInfo(fromCodepoint: 0x1BC0, toCodepoint: 0x1BFF, name: 'Batak', plane: Plane::Plane0)]
    case Batak;

    #[BlockInfo(fromCodepoint: 0x1C00, toCodepoint: 0x1C4F, name: 'Lepcha', plane: Plane::Plane0)]
    case Lepcha;

    #[BlockInfo(fromCodepoint: 0x1C50, toCodepoint: 0x1C7F, name: 'Ol Chiki', plane: Plane::Plane0)]
    case Ol_Chiki;

    #[BlockInfo(fromCodepoint: 0x1C80, toCodepoint: 0x1C8F, name: 'Cyrillic Extended-C', plane: Plane::Plane0)]
    case Cyrillic_ExtendedC;

    #[BlockInfo(fromCodepoint: 0x1C90, toCodepoint: 0x1CBF, name: 'Georgian Extended', plane: Plane::Plane0)]
    case Georgian_Extended;

    #[BlockInfo(fromCodepoint: 0x1CC0, toCodepoint: 0x1CCF, name: 'Sundanese Supplement', plane: Plane::Plane0)]
    case Sundanese_Supplement;

    #[BlockInfo(fromCodepoint: 0x1CD0, toCodepoint: 0x1CFF, name: 'Vedic Extensions', plane: Plane::Plane0)]
    case Vedic_Extensions;

    #[BlockInfo(fromCodepoint: 0x1D00, toCodepoint: 0x1D7F, name: 'Phonetic Extensions', plane: Plane::Plane0)]
    case Phonetic_Extensions;

    #[BlockInfo(fromCodepoint: 0x1D80, toCodepoint: 0x1DBF, name: 'Phonetic Extensions Supplement', plane: Plane::Plane0)]
    case Phonetic_Extensions_Supplement;

    #[BlockInfo(fromCodepoint: 0x1DC0, toCodepoint: 0x1DFF, name: 'Combining Diacritical Marks Supplement', plane: Plane::Plane0)]
    case Combining_Diacritical_Marks_Supplement;

    #[BlockInfo(fromCodepoint: 0x1E00, toCodepoint: 0x1EFF, name: 'Latin Extended Additional', plane: Plane::Plane0)]
    case Latin_Extended_Additional;

    #[BlockInfo(fromCodepoint: 0x1F00, toCodepoint: 0x1FFF, name: 'Greek Extended', plane: Plane::Plane0)]
    case Greek_Extended;

    #[BlockInfo(fromCodepoint: 0x2000, toCodepoint: 0x206F, name: 'General Punctuation', plane: Plane::Plane0)]
    case General_Punctuation;

    #[BlockInfo(fromCodepoint: 0x2070, toCodepoint: 0x209F, name: 'Superscripts and Subscripts', plane: Plane::Plane0)]
    case Superscripts_and_Subscripts;

    #[BlockInfo(fromCodepoint: 0x20A0, toCodepoint: 0x20CF, name: 'Currency Symbols', plane: Plane::Plane0)]
    case Currency_Symbols;

    #[BlockInfo(fromCodepoint: 0x20D0, toCodepoint: 0x20FF, name: 'Combining Diacritical Marks for Symbols', plane: Plane::Plane0)]
    case Combining_Diacritical_Marks_for_Symbols;

    #[BlockInfo(fromCodepoint: 0x2100, toCodepoint: 0x214F, name: 'Letterlike Symbols', plane: Plane::Plane0)]
    case Letterlike_Symbols;

    #[BlockInfo(fromCodepoint: 0x2150, toCodepoint: 0x218F, name: 'Number Forms', plane: Plane::Plane0)]
    case Number_Forms;

    #[BlockInfo(fromCodepoint: 0x2190, toCodepoint: 0x21FF, name: 'Arrows', plane: Plane::Plane0)]
    case Arrows;

    #[BlockInfo(fromCodepoint: 0x2200, toCodepoint: 0x22FF, name: 'Mathematical Operators', plane: Plane::Plane0)]
    case Mathematical_Operators;

    #[BlockInfo(fromCodepoint: 0x2300, toCodepoint: 0x23FF, name: 'Miscellaneous Technical', plane: Plane::Plane0)]
    case Miscellaneous_Technical;

    #[BlockInfo(fromCodepoint: 0x2400, toCodepoint: 0x243F, name: 'Control Pictures', plane: Plane::Plane0)]
    case Control_Pictures;

    #[BlockInfo(fromCodepoint: 0x2440, toCodepoint: 0x245F, name: 'Optical Character Recognition', plane: Plane::Plane0)]
    case Optical_Character_Recognition;

    #[BlockInfo(fromCodepoint: 0x2460, toCodepoint: 0x24FF, name: 'Enclosed Alphanumerics', plane: Plane::Plane0)]
    case Enclosed_Alphanumerics;

    #[BlockInfo(fromCodepoint: 0x2500, toCodepoint: 0x257F, name: 'Box Drawing', plane: Plane::Plane0)]
    case Box_Drawing;

    #[BlockInfo(fromCodepoint: 0x2580, toCodepoint: 0x259F, name: 'Block Elements', plane: Plane::Plane0)]
    case Block_Elements;

    #[BlockInfo(fromCodepoint: 0x25A0, toCodepoint: 0x25FF, name: 'Geometric Shapes', plane: Plane::Plane0)]
    case Geometric_Shapes;

    #[BlockInfo(fromCodepoint: 0x2600, toCodepoint: 0x26FF, name: 'Miscellaneous Symbols', plane: Plane::Plane0)]
    case Miscellaneous_Symbols;

    #[BlockInfo(fromCodepoint: 0x2700, toCodepoint: 0x27BF, name: 'Dingbats', plane: Plane::Plane0)]
    case Dingbats;

    #[BlockInfo(fromCodepoint: 0x27C0, toCodepoint: 0x27EF, name: 'Miscellaneous Mathematical Symbols-A', plane: Plane::Plane0)]
    case Miscellaneous_Mathematical_SymbolsA;

    #[BlockInfo(fromCodepoint: 0x27F0, toCodepoint: 0x27FF, name: 'Supplemental Arrows-A', plane: Plane::Plane0)]
    case Supplemental_ArrowsA;

    #[BlockInfo(fromCodepoint: 0x2800, toCodepoint: 0x28FF, name: 'Braille Patterns', plane: Plane::Plane0)]
    case Braille_Patterns;

    #[BlockInfo(fromCodepoint: 0x2900, toCodepoint: 0x297F, name: 'Supplemental Arrows-B', plane: Plane::Plane0)]
    case Supplemental_ArrowsB;

    #[BlockInfo(fromCodepoint: 0x2980, toCodepoint: 0x29FF, name: 'Miscellaneous Mathematical Symbols-B', plane: Plane::Plane0)]
    case Miscellaneous_Mathematical_SymbolsB;

    #[BlockInfo(fromCodepoint: 0x2A00, toCodepoint: 0x2AFF, name: 'Supplemental Mathematical Operators', plane: Plane::Plane0)]
    case Supplemental_Mathematical_Operators;

    #[BlockInfo(fromCodepoint: 0x2B00, toCodepoint: 0x2BFF, name: 'Miscellaneous Symbols and Arrows', plane: Plane::Plane0)]
    case Miscellaneous_Symbols_and_Arrows;

    #[BlockInfo(fromCodepoint: 0x2C00, toCodepoint: 0x2C5F, name: 'Glagolitic', plane: Plane::Plane0)]
    case Glagolitic;

    #[BlockInfo(fromCodepoint: 0x2C60, toCodepoint: 0x2C7F, name: 'Latin Extended-C', plane: Plane::Plane0)]
    case Latin_ExtendedC;

    #[BlockInfo(fromCodepoint: 0x2C80, toCodepoint: 0x2CFF, name: 'Coptic', plane: Plane::Plane0)]
    case Coptic;

    #[BlockInfo(fromCodepoint: 0x2D00, toCodepoint: 0x2D2F, name: 'Georgian Supplement', plane: Plane::Plane0)]
    case Georgian_Supplement;

    #[BlockInfo(fromCodepoint: 0x2D30, toCodepoint: 0x2D7F, name: 'Tifinagh', plane: Plane::Plane0)]
    case Tifinagh;

    #[BlockInfo(fromCodepoint: 0x2D80, toCodepoint: 0x2DDF, name: 'Ethiopic Extended', plane: Plane::Plane0)]
    case Ethiopic_Extended;

    #[BlockInfo(fromCodepoint: 0x2DE0, toCodepoint: 0x2DFF, name: 'Cyrillic Extended-A', plane: Plane::Plane0)]
    case Cyrillic_ExtendedA;

    #[BlockInfo(fromCodepoint: 0x2E00, toCodepoint: 0x2E7F, name: 'Supplemental Punctuation', plane: Plane::Plane0)]
    case Supplemental_Punctuation;

    #[BlockInfo(fromCodepoint: 0x2E80, toCodepoint: 0x2EFF, name: 'CJK Radicals Supplement', plane: Plane::Plane0)]
    case CJK_Radicals_Supplement;

    #[BlockInfo(fromCodepoint: 0x2F00, toCodepoint: 0x2FDF, name: 'Kangxi Radicals', plane: Plane::Plane0)]
    case Kangxi_Radicals;

    #[BlockInfo(fromCodepoint: 0x2FF0, toCodepoint: 0x2FFF, name: 'Ideographic Description Characters', plane: Plane::Plane0)]
    case Ideographic_Description_Characters;

    #[BlockInfo(fromCodepoint: 0x3000, toCodepoint: 0x303F, name: 'CJK Symbols and Punctuation', plane: Plane::Plane0)]
    case CJK_Symbols_and_Punctuation;

    #[BlockInfo(fromCodepoint: 0x3040, toCodepoint: 0x309F, name: 'Hiragana', plane: Plane::Plane0)]
    case Hiragana;

    #[BlockInfo(fromCodepoint: 0x30A0, toCodepoint: 0x30FF, name: 'Katakana', plane: Plane::Plane0)]
    case Katakana;

    #[BlockInfo(fromCodepoint: 0x3100, toCodepoint: 0x312F, name: 'Bopomofo', plane: Plane::Plane0)]
    case Bopomofo;

    #[BlockInfo(fromCodepoint: 0x3130, toCodepoint: 0x318F, name: 'Hangul Compatibility Jamo', plane: Plane::Plane0)]
    case Hangul_Compatibility_Jamo;

    #[BlockInfo(fromCodepoint: 0x3190, toCodepoint: 0x319F, name: 'Kanbun', plane: Plane::Plane0)]
    case Kanbun;

    #[BlockInfo(fromCodepoint: 0x31A0, toCodepoint: 0x31BF, name: 'Bopomofo Extended', plane: Plane::Plane0)]
    case Bopomofo_Extended;

    #[BlockInfo(fromCodepoint: 0x31C0, toCodepoint: 0x31EF, name: 'CJK Strokes', plane: Plane::Plane0)]
    case CJK_Strokes;

    #[BlockInfo(fromCodepoint: 0x31F0, toCodepoint: 0x31FF, name: 'Katakana Phonetic Extensions', plane: Plane::Plane0)]
    case Katakana_Phonetic_Extensions;

    #[BlockInfo(fromCodepoint: 0x3200, toCodepoint: 0x32FF, name: 'Enclosed CJK Letters and Months', plane: Plane::Plane0)]
    case Enclosed_CJK_Letters_and_Months;

    #[BlockInfo(fromCodepoint: 0x3300, toCodepoint: 0x33FF, name: 'CJK Compatibility', plane: Plane::Plane0)]
    case CJK_Compatibility;

    #[BlockInfo(fromCodepoint: 0x3400, toCodepoint: 0x4DBF, name: 'CJK Unified Ideographs Extension A', plane: Plane::Plane0)]
    case CJK_Unified_Ideographs_Extension_A;

    #[BlockInfo(fromCodepoint: 0x4DC0, toCodepoint: 0x4DFF, name: 'Yijing Hexagram Symbols', plane: Plane::Plane0)]
    case Yijing_Hexagram_Symbols;

    #[BlockInfo(fromCodepoint: 0x4E00, toCodepoint: 0x9FFF, name: 'CJK Unified Ideographs', plane: Plane::Plane0)]
    case CJK_Unified_Ideographs;

    #[BlockInfo(fromCodepoint: 0xA000, toCodepoint: 0xA48F, name: 'Yi Syllables', plane: Plane::Plane0)]
    case Yi_Syllables;

    #[BlockInfo(fromCodepoint: 0xA490, toCodepoint: 0xA4CF, name: 'Yi Radicals', plane: Plane::Plane0)]
    case Yi_Radicals;

    #[BlockInfo(fromCodepoint: 0xA4D0, toCodepoint: 0xA4FF, name: 'Lisu', plane: Plane::Plane0)]
    case Lisu;

    #[BlockInfo(fromCodepoint: 0xA500, toCodepoint: 0xA63F, name: 'Vai', plane: Plane::Plane0)]
    case Vai;

    #[BlockInfo(fromCodepoint: 0xA640, toCodepoint: 0xA69F, name: 'Cyrillic Extended-B', plane: Plane::Plane0)]
    case Cyrillic_ExtendedB;

    #[BlockInfo(fromCodepoint: 0xA6A0, toCodepoint: 0xA6FF, name: 'Bamum', plane: Plane::Plane0)]
    case Bamum;

    #[BlockInfo(fromCodepoint: 0xA700, toCodepoint: 0xA71F, name: 'Modifier Tone Letters', plane: Plane::Plane0)]
    case Modifier_Tone_Letters;

    #[BlockInfo(fromCodepoint: 0xA720, toCodepoint: 0xA7FF, name: 'Latin Extended-D', plane: Plane::Plane0)]
    case Latin_ExtendedD;

    #[BlockInfo(fromCodepoint: 0xA800, toCodepoint: 0xA82F, name: 'Syloti Nagri', plane: Plane::Plane0)]
    case Syloti_Nagri;

    #[BlockInfo(fromCodepoint: 0xA830, toCodepoint: 0xA83F, name: 'Common Indic Number Forms', plane: Plane::Plane0)]
    case Common_Indic_Number_Forms;

    #[BlockInfo(fromCodepoint: 0xA840, toCodepoint: 0xA87F, name: 'Phags-pa', plane: Plane::Plane0)]
    case Phagspa;

    #[BlockInfo(fromCodepoint: 0xA880, toCodepoint: 0xA8DF, name: 'Saurashtra', plane: Plane::Plane0)]
    case Saurashtra;

    #[BlockInfo(fromCodepoint: 0xA8E0, toCodepoint: 0xA8FF, name: 'Devanagari Extended', plane: Plane::Plane0)]
    case Devanagari_Extended;

    #[BlockInfo(fromCodepoint: 0xA900, toCodepoint: 0xA92F, name: 'Kayah Li', plane: Plane::Plane0)]
    case Kayah_Li;

    #[BlockInfo(fromCodepoint: 0xA930, toCodepoint: 0xA95F, name: 'Rejang', plane: Plane::Plane0)]
    case Rejang;

    #[BlockInfo(fromCodepoint: 0xA960, toCodepoint: 0xA97F, name: 'Hangul Jamo Extended-A', plane: Plane::Plane0)]
    case Hangul_Jamo_ExtendedA;

    #[BlockInfo(fromCodepoint: 0xA980, toCodepoint: 0xA9DF, name: 'Javanese', plane: Plane::Plane0)]
    case Javanese;

    #[BlockInfo(fromCodepoint: 0xA9E0, toCodepoint: 0xA9FF, name: 'Myanmar Extended-B', plane: Plane::Plane0)]
    case Myanmar_ExtendedB;

    #[BlockInfo(fromCodepoint: 0xAA00, toCodepoint: 0xAA5F, name: 'Cham', plane: Plane::Plane0)]
    case Cham;

    #[BlockInfo(fromCodepoint: 0xAA60, toCodepoint: 0xAA7F, name: 'Myanmar Extended-A', plane: Plane::Plane0)]
    case Myanmar_ExtendedA;

    #[BlockInfo(fromCodepoint: 0xAA80, toCodepoint: 0xAADF, name: 'Tai Viet', plane: Plane::Plane0)]
    case Tai_Viet;

    #[BlockInfo(fromCodepoint: 0xAAE0, toCodepoint: 0xAAFF, name: 'Meetei Mayek Extensions', plane: Plane::Plane0)]
    case Meetei_Mayek_Extensions;

    #[BlockInfo(fromCodepoint: 0xAB00, toCodepoint: 0xAB2F, name: 'Ethiopic Extended-A', plane: Plane::Plane0)]
    case Ethiopic_ExtendedA;

    #[BlockInfo(fromCodepoint: 0xAB30, toCodepoint: 0xAB6F, name: 'Latin Extended-E', plane: Plane::Plane0)]
    case Latin_ExtendedE;

    #[BlockInfo(fromCodepoint: 0xAB70, toCodepoint: 0xABBF, name: 'Cherokee Supplement', plane: Plane::Plane0)]
    case Cherokee_Supplement;

    #[BlockInfo(fromCodepoint: 0xABC0, toCodepoint: 0xABFF, name: 'Meetei Mayek', plane: Plane::Plane0)]
    case Meetei_Mayek;

    #[BlockInfo(fromCodepoint: 0xAC00, toCodepoint: 0xD7AF, name: 'Hangul Syllables', plane: Plane::Plane0)]
    case Hangul_Syllables;

    #[BlockInfo(fromCodepoint: 0xD7B0, toCodepoint: 0xD7FF, name: 'Hangul Jamo Extended-B', plane: Plane::Plane0)]
    case Hangul_Jamo_ExtendedB;

    #[BlockInfo(fromCodepoint: 0xD800, toCodepoint: 0xDB7F, name: 'High Surrogates', plane: Plane::Plane0)]
    case High_Surrogates;

    #[BlockInfo(fromCodepoint: 0xDB80, toCodepoint: 0xDBFF, name: 'High Private Use Surrogates', plane: Plane::Plane0)]
    case High_Private_Use_Surrogates;

    #[BlockInfo(fromCodepoint: 0xDC00, toCodepoint: 0xDFFF, name: 'Low Surrogates', plane: Plane::Plane0)]
    case Low_Surrogates;

    #[BlockInfo(fromCodepoint: 0xE000, toCodepoint: 0xF8FF, name: 'Private Use Area', plane: Plane::Plane0)]
    case Private_Use_Area;

    #[BlockInfo(fromCodepoint: 0xF900, toCodepoint: 0xFAFF, name: 'CJK Compatibility Ideographs', plane: Plane::Plane0)]
    case CJK_Compatibility_Ideographs;

    #[BlockInfo(fromCodepoint: 0xFB00, toCodepoint: 0xFB4F, name: 'Alphabetic Presentation Forms', plane: Plane::Plane0)]
    case Alphabetic_Presentation_Forms;

    #[BlockInfo(fromCodepoint: 0xFB50, toCodepoint: 0xFDFF, name: 'Arabic Presentation Forms-A', plane: Plane::Plane0)]
    case Arabic_Presentation_FormsA;

    #[BlockInfo(fromCodepoint: 0xFE00, toCodepoint: 0xFE0F, name: 'Variation Selectors', plane: Plane::Plane0)]
    case Variation_Selectors;

    #[BlockInfo(fromCodepoint: 0xFE10, toCodepoint: 0xFE1F, name: 'Vertical Forms', plane: Plane::Plane0)]
    case Vertical_Forms;

    #[BlockInfo(fromCodepoint: 0xFE20, toCodepoint: 0xFE2F, name: 'Combining Half Marks', plane: Plane::Plane0)]
    case Combining_Half_Marks;

    #[BlockInfo(fromCodepoint: 0xFE30, toCodepoint: 0xFE4F, name: 'CJK Compatibility Forms', plane: Plane::Plane0)]
    case CJK_Compatibility_Forms;

    #[BlockInfo(fromCodepoint: 0xFE50, toCodepoint: 0xFE6F, name: 'Small Form Variants', plane: Plane::Plane0)]
    case Small_Form_Variants;

    #[BlockInfo(fromCodepoint: 0xFE70, toCodepoint: 0xFEFF, name: 'Arabic Presentation Forms-B', plane: Plane::Plane0)]
    case Arabic_Presentation_FormsB;

    #[BlockInfo(fromCodepoint: 0xFF00, toCodepoint: 0xFFEF, name: 'Halfwidth and Fullwidth Forms', plane: Plane::Plane0)]
    case Halfwidth_and_Fullwidth_Forms;

    #[BlockInfo(fromCodepoint: 0xFFF0, toCodepoint: 0xFFFF, name: 'Specials', plane: Plane::Plane0)]
    case Specials;

    // Blocks for plane 1 (Supplementary Multilingual Plane}

    #[BlockInfo(fromCodepoint: 0x10000, toCodepoint: 0x1007F, name: 'Linear B Syllabary', plane: Plane::Plane1)]
    case Linear_B_Syllabary;

    #[BlockInfo(fromCodepoint: 0x10080, toCodepoint: 0x100FF, name: 'Linear B Ideograms', plane: Plane::Plane1)]
    case Linear_B_Ideograms;

    #[BlockInfo(fromCodepoint: 0x10100, toCodepoint: 0x1013F, name: 'Aegean Numbers', plane: Plane::Plane1)]
    case Aegean_Numbers;

    #[BlockInfo(fromCodepoint: 0x10140, toCodepoint: 0x1018F, name: 'Ancient Greek Numbers', plane: Plane::Plane1)]
    case Ancient_Greek_Numbers;

    #[BlockInfo(fromCodepoint: 0x10190, toCodepoint: 0x101CF, name: 'Ancient Symbols', plane: Plane::Plane1)]
    case Ancient_Symbols;

    #[BlockInfo(fromCodepoint: 0x101D0, toCodepoint: 0x101FF, name: 'Phaistos Disc', plane: Plane::Plane1)]
    case Phaistos_Disc;

    #[BlockInfo(fromCodepoint: 0x10280, toCodepoint: 0x1029F, name: 'Lycian', plane: Plane::Plane1)]
    case Lycian;

    #[BlockInfo(fromCodepoint: 0x102A0, toCodepoint: 0x102DF, name: 'Carian', plane: Plane::Plane1)]
    case Carian;

    #[BlockInfo(fromCodepoint: 0x102E0, toCodepoint: 0x102FF, name: 'Coptic Epact Numbers', plane: Plane::Plane1)]
    case Coptic_Epact_Numbers;

    #[BlockInfo(fromCodepoint: 0x10300, toCodepoint: 0x1032F, name: 'Old Italic', plane: Plane::Plane1)]
    case Old_Italic;

    #[BlockInfo(fromCodepoint: 0x10330, toCodepoint: 0x1034F, name: 'Gothic', plane: Plane::Plane1)]
    case Gothic;

    #[BlockInfo(fromCodepoint: 0x10350, toCodepoint: 0x1037F, name: 'Old Permic', plane: Plane::Plane1)]
    case Old_Permic;

    #[BlockInfo(fromCodepoint: 0x10380, toCodepoint: 0x1039F, name: 'Ugaritic', plane: Plane::Plane1)]
    case Ugaritic;

    #[BlockInfo(fromCodepoint: 0x103A0, toCodepoint: 0x103DF, name: 'Old Persian', plane: Plane::Plane1)]
    case Old_Persian;

    #[BlockInfo(fromCodepoint: 0x10400, toCodepoint: 0x1044F, name: 'Deseret', plane: Plane::Plane1)]
    case Deseret;

    #[BlockInfo(fromCodepoint: 0x10450, toCodepoint: 0x1047F, name: 'Shavian', plane: Plane::Plane1)]
    case Shavian;

    #[BlockInfo(fromCodepoint: 0x10480, toCodepoint: 0x104AF, name: 'Osmanya', plane: Plane::Plane1)]
    case Osmanya;

    #[BlockInfo(fromCodepoint: 0x104B0, toCodepoint: 0x104FF, name: 'Osage', plane: Plane::Plane1)]
    case Osage;

    #[BlockInfo(fromCodepoint: 0x10500, toCodepoint: 0x1052F, name: 'Elbasan', plane: Plane::Plane1)]
    case Elbasan;

    #[BlockInfo(fromCodepoint: 0x10530, toCodepoint: 0x1056F, name: 'Caucasian Albanian', plane: Plane::Plane1)]
    case Caucasian_Albanian;

    #[BlockInfo(fromCodepoint: 0x10570, toCodepoint: 0x105BF, name: 'Vithkuqi', plane: Plane::Plane1)]
    case Vithkuqi;

    #[BlockInfo(fromCodepoint: 0x105C0, toCodepoint: 0x105FF, name: 'Todhri', plane: Plane::Plane1)]
    case Todhri;

    #[BlockInfo(fromCodepoint: 0x10600, toCodepoint: 0x1077F, name: 'Linear A', plane: Plane::Plane1)]
    case Linear_A;

    #[BlockInfo(fromCodepoint: 0x10780, toCodepoint: 0x107BF, name: 'Latin Extended-F', plane: Plane::Plane1)]
    case Latin_ExtendedF;

    #[BlockInfo(fromCodepoint: 0x10800, toCodepoint: 0x1083F, name: 'Cypriot Syllabary', plane: Plane::Plane1)]
    case Cypriot_Syllabary;

    #[BlockInfo(fromCodepoint: 0x10840, toCodepoint: 0x1085F, name: 'Imperial Aramaic', plane: Plane::Plane1)]
    case Imperial_Aramaic;

    #[BlockInfo(fromCodepoint: 0x10860, toCodepoint: 0x1087F, name: 'Palmyrene', plane: Plane::Plane1)]
    case Palmyrene;

    #[BlockInfo(fromCodepoint: 0x10880, toCodepoint: 0x108AF, name: 'Nabataean', plane: Plane::Plane1)]
    case Nabataean;

    #[BlockInfo(fromCodepoint: 0x108E0, toCodepoint: 0x108FF, name: 'Hatran', plane: Plane::Plane1)]
    case Hatran;

    #[BlockInfo(fromCodepoint: 0x10900, toCodepoint: 0x1091F, name: 'Phoenician', plane: Plane::Plane1)]
    case Phoenician;

    #[BlockInfo(fromCodepoint: 0x10920, toCodepoint: 0x1093F, name: 'Lydian', plane: Plane::Plane1)]
    case Lydian;

    #[BlockInfo(fromCodepoint: 0x10980, toCodepoint: 0x1099F, name: 'Meroitic Hieroglyphs', plane: Plane::Plane1)]
    case Meroitic_Hieroglyphs;

    #[BlockInfo(fromCodepoint: 0x109A0, toCodepoint: 0x109FF, name: 'Meroitic Cursive', plane: Plane::Plane1)]
    case Meroitic_Cursive;

    #[BlockInfo(fromCodepoint: 0x10A00, toCodepoint: 0x10A5F, name: 'Kharoshthi', plane: Plane::Plane1)]
    case Kharoshthi;

    #[BlockInfo(fromCodepoint: 0x10A60, toCodepoint: 0x10A7F, name: 'Old South Arabian', plane: Plane::Plane1)]
    case Old_South_Arabian;

    #[BlockInfo(fromCodepoint: 0x10A80, toCodepoint: 0x10A9F, name: 'Old North Arabian', plane: Plane::Plane1)]
    case Old_North_Arabian;

    #[BlockInfo(fromCodepoint: 0x10AC0, toCodepoint: 0x10AFF, name: 'Manichaean', plane: Plane::Plane1)]
    case Manichaean;

    #[BlockInfo(fromCodepoint: 0x10B00, toCodepoint: 0x10B3F, name: 'Avestan', plane: Plane::Plane1)]
    case Avestan;

    #[BlockInfo(fromCodepoint: 0x10B40, toCodepoint: 0x10B5F, name: 'Inscriptional Parthian', plane: Plane::Plane1)]
    case Inscriptional_Parthian;

    #[BlockInfo(fromCodepoint: 0x10B60, toCodepoint: 0x10B7F, name: 'Inscriptional Pahlavi', plane: Plane::Plane1)]
    case Inscriptional_Pahlavi;

    #[BlockInfo(fromCodepoint: 0x10B80, toCodepoint: 0x10BAF, name: 'Psalter Pahlavi', plane: Plane::Plane1)]
    case Psalter_Pahlavi;

    #[BlockInfo(fromCodepoint: 0x10C00, toCodepoint: 0x10C4F, name: 'Old Turkic', plane: Plane::Plane1)]
    case Old_Turkic;

    #[BlockInfo(fromCodepoint: 0x10C80, toCodepoint: 0x10CFF, name: 'Old Hungarian', plane: Plane::Plane1)]
    case Old_Hungarian;

    #[BlockInfo(fromCodepoint: 0x10D00, toCodepoint: 0x10D3F, name: 'Hanifi Rohingya', plane: Plane::Plane1)]
    case Hanifi_Rohingya;

    #[BlockInfo(fromCodepoint: 0x10D40, toCodepoint: 0x10D8F, name: 'Garay', plane: Plane::Plane1)]
    case Garay;

    #[BlockInfo(fromCodepoint: 0x10E60, toCodepoint: 0x10E7F, name: 'Rumi Numeral Symbols', plane: Plane::Plane1)]
    case Rumi_Numeral_Symbols;

    #[BlockInfo(fromCodepoint: 0x10E80, toCodepoint: 0x10EBF, name: 'Yezidi', plane: Plane::Plane1)]
    case Yezidi;

    #[BlockInfo(fromCodepoint: 0x10EC0, toCodepoint: 0x10EFF, name: 'Arabic Extended-C', plane: Plane::Plane1)]
    case Arabic_ExtendedC;

    #[BlockInfo(fromCodepoint: 0x10F00, toCodepoint: 0x10F2F, name: 'Old Sogdian', plane: Plane::Plane1)]
    case Old_Sogdian;

    #[BlockInfo(fromCodepoint: 0x10F30, toCodepoint: 0x10F6F, name: 'Sogdian', plane: Plane::Plane1)]
    case Sogdian;

    #[BlockInfo(fromCodepoint: 0x10F70, toCodepoint: 0x10FAF, name: 'Old Uyghur', plane: Plane::Plane1)]
    case Old_Uyghur;

    #[BlockInfo(fromCodepoint: 0x10FB0, toCodepoint: 0x10FDF, name: 'Chorasmian', plane: Plane::Plane1)]
    case Chorasmian;

    #[BlockInfo(fromCodepoint: 0x10FE0, toCodepoint: 0x10FFF, name: 'Elymaic', plane: Plane::Plane1)]
    case Elymaic;

    #[BlockInfo(fromCodepoint: 0x11000, toCodepoint: 0x1107F, name: 'Brahmi', plane: Plane::Plane1)]
    case Brahmi;

    #[BlockInfo(fromCodepoint: 0x11080, toCodepoint: 0x110CF, name: 'Kaithi', plane: Plane::Plane1)]
    case Kaithi;

    #[BlockInfo(fromCodepoint: 0x110D0, toCodepoint: 0x110FF, name: 'Sora Sompeng', plane: Plane::Plane1)]
    case Sora_Sompeng;

    #[BlockInfo(fromCodepoint: 0x11100, toCodepoint: 0x1114F, name: 'Chakma', plane: Plane::Plane1)]
    case Chakma;

    #[BlockInfo(fromCodepoint: 0x11150, toCodepoint: 0x1117F, name: 'Mahajani', plane: Plane::Plane1)]
    case Mahajani;

    #[BlockInfo(fromCodepoint: 0x11180, toCodepoint: 0x111DF, name: 'Sharada', plane: Plane::Plane1)]
    case Sharada;

    #[BlockInfo(fromCodepoint: 0x111E0, toCodepoint: 0x111FF, name: 'Sinhala Archaic Numbers', plane: Plane::Plane1)]
    case Sinhala_Archaic_Numbers;

    #[BlockInfo(fromCodepoint: 0x11200, toCodepoint: 0x1124F, name: 'Khojki', plane: Plane::Plane1)]
    case Khojki;

    #[BlockInfo(fromCodepoint: 0x11280, toCodepoint: 0x112AF, name: 'Multani', plane: Plane::Plane1)]
    case Multani;

    #[BlockInfo(fromCodepoint: 0x112B0, toCodepoint: 0x112FF, name: 'Khudawadi', plane: Plane::Plane1)]
    case Khudawadi;

    #[BlockInfo(fromCodepoint: 0x11300, toCodepoint: 0x1137F, name: 'Grantha', plane: Plane::Plane1)]
    case Grantha;

    #[BlockInfo(fromCodepoint: 0x11380, toCodepoint: 0x113FF, name: 'Tulu-Tigalari', plane: Plane::Plane1)]
    case TuluTigalari;

    #[BlockInfo(fromCodepoint: 0x11400, toCodepoint: 0x1147F, name: 'Newa', plane: Plane::Plane1)]
    case Newa;

    #[BlockInfo(fromCodepoint: 0x11480, toCodepoint: 0x114DF, name: 'Tirhuta', plane: Plane::Plane1)]
    case Tirhuta;

    #[BlockInfo(fromCodepoint: 0x11580, toCodepoint: 0x115FF, name: 'Siddham', plane: Plane::Plane1)]
    case Siddham;

    #[BlockInfo(fromCodepoint: 0x11600, toCodepoint: 0x1165F, name: 'Modi', plane: Plane::Plane1)]
    case Modi;

    #[BlockInfo(fromCodepoint: 0x11660, toCodepoint: 0x1167F, name: 'Mongolian Supplement', plane: Plane::Plane1)]
    case Mongolian_Supplement;

    #[BlockInfo(fromCodepoint: 0x11680, toCodepoint: 0x116CF, name: 'Takri', plane: Plane::Plane1)]
    case Takri;

    #[BlockInfo(fromCodepoint: 0x116D0, toCodepoint: 0x116FF, name: 'Myanmar Extended-C', plane: Plane::Plane1)]
    case Myanmar_ExtendedC;

    #[BlockInfo(fromCodepoint: 0x11700, toCodepoint: 0x1174F, name: 'Ahom', plane: Plane::Plane1)]
    case Ahom;

    #[BlockInfo(fromCodepoint: 0x11800, toCodepoint: 0x1184F, name: 'Dogra', plane: Plane::Plane1)]
    case Dogra;

    #[BlockInfo(fromCodepoint: 0x118A0, toCodepoint: 0x118FF, name: 'Warang Citi', plane: Plane::Plane1)]
    case Warang_Citi;

    #[BlockInfo(fromCodepoint: 0x11900, toCodepoint: 0x1195F, name: 'Dives Akuru', plane: Plane::Plane1)]
    case Dives_Akuru;

    #[BlockInfo(fromCodepoint: 0x119A0, toCodepoint: 0x119FF, name: 'Nandinagari', plane: Plane::Plane1)]
    case Nandinagari;

    #[BlockInfo(fromCodepoint: 0x11A00, toCodepoint: 0x11A4F, name: 'Zanabazar Square', plane: Plane::Plane1)]
    case Zanabazar_Square;

    #[BlockInfo(fromCodepoint: 0x11A50, toCodepoint: 0x11AAF, name: 'Soyombo', plane: Plane::Plane1)]
    case Soyombo;

    #[BlockInfo(fromCodepoint: 0x11AB0, toCodepoint: 0x11ABF, name: 'Unified Canadian Aboriginal Syllabics Extended-A', plane: Plane::Plane1)]
    case Unified_Canadian_Aboriginal_Syllabics_ExtendedA;

    #[BlockInfo(fromCodepoint: 0x11AC0, toCodepoint: 0x11AFF, name: 'Pau Cin Hau', plane: Plane::Plane1)]
    case Pau_Cin_Hau;

    #[BlockInfo(fromCodepoint: 0x11B00, toCodepoint: 0x11B5F, name: 'Devanagari Extended-A', plane: Plane::Plane1)]
    case Devanagari_ExtendedA;

    #[BlockInfo(fromCodepoint: 0x11BC0, toCodepoint: 0x11BFF, name: 'Sunuwar', plane: Plane::Plane1)]
    case Sunuwar;

    #[BlockInfo(fromCodepoint: 0x11C00, toCodepoint: 0x11C6F, name: 'Bhaiksuki', plane: Plane::Plane1)]
    case Bhaiksuki;

    #[BlockInfo(fromCodepoint: 0x11C70, toCodepoint: 0x11CBF, name: 'Marchen', plane: Plane::Plane1)]
    case Marchen;

    #[BlockInfo(fromCodepoint: 0x11D00, toCodepoint: 0x11D5F, name: 'Masaram Gondi', plane: Plane::Plane1)]
    case Masaram_Gondi;

    #[BlockInfo(fromCodepoint: 0x11D60, toCodepoint: 0x11DAF, name: 'Gunjala Gondi', plane: Plane::Plane1)]
    case Gunjala_Gondi;

    #[BlockInfo(fromCodepoint: 0x11EE0, toCodepoint: 0x11EFF, name: 'Makasar', plane: Plane::Plane1)]
    case Makasar;

    #[BlockInfo(fromCodepoint: 0x11F00, toCodepoint: 0x11F5F, name: 'Kawi', plane: Plane::Plane1)]
    case Kawi;

    #[BlockInfo(fromCodepoint: 0x11FB0, toCodepoint: 0x11FBF, name: 'Lisu Supplement', plane: Plane::Plane1)]
    case Lisu_Supplement;

    #[BlockInfo(fromCodepoint: 0x11FC0, toCodepoint: 0x11FFF, name: 'Tamil Supplement', plane: Plane::Plane1)]
    case Tamil_Supplement;

    #[BlockInfo(fromCodepoint: 0x12000, toCodepoint: 0x123FF, name: 'Cuneiform', plane: Plane::Plane1)]
    case Cuneiform;

    #[BlockInfo(fromCodepoint: 0x12400, toCodepoint: 0x1247F, name: 'Cuneiform Numbers and Punctuation', plane: Plane::Plane1)]
    case Cuneiform_Numbers_and_Punctuation;

    #[BlockInfo(fromCodepoint: 0x12480, toCodepoint: 0x1254F, name: 'Early Dynastic Cuneiform', plane: Plane::Plane1)]
    case Early_Dynastic_Cuneiform;

    #[BlockInfo(fromCodepoint: 0x12F90, toCodepoint: 0x12FFF, name: 'Cypro-Minoan', plane: Plane::Plane1)]
    case CyproMinoan;

    #[BlockInfo(fromCodepoint: 0x13000, toCodepoint: 0x1342F, name: 'Egyptian Hieroglyphs', plane: Plane::Plane1)]
    case Egyptian_Hieroglyphs;

    #[BlockInfo(fromCodepoint: 0x13430, toCodepoint: 0x1345F, name: 'Egyptian Hieroglyph Format Controls', plane: Plane::Plane1)]
    case Egyptian_Hieroglyph_Format_Controls;

    #[BlockInfo(fromCodepoint: 0x13460, toCodepoint: 0x143FF, name: 'Egyptian Hieroglyphs Extended-A', plane: Plane::Plane1)]
    case Egyptian_Hieroglyphs_ExtendedA;

    #[BlockInfo(fromCodepoint: 0x14400, toCodepoint: 0x1467F, name: 'Anatolian Hieroglyphs', plane: Plane::Plane1)]
    case Anatolian_Hieroglyphs;

    #[BlockInfo(fromCodepoint: 0x16100, toCodepoint: 0x1613F, name: 'Gurung Khema', plane: Plane::Plane1)]
    case Gurung_Khema;

    #[BlockInfo(fromCodepoint: 0x16800, toCodepoint: 0x16A3F, name: 'Bamum Supplement', plane: Plane::Plane1)]
    case Bamum_Supplement;

    #[BlockInfo(fromCodepoint: 0x16A40, toCodepoint: 0x16A6F, name: 'Mro', plane: Plane::Plane1)]
    case Mro;

    #[BlockInfo(fromCodepoint: 0x16A70, toCodepoint: 0x16ACF, name: 'Tangsa', plane: Plane::Plane1)]
    case Tangsa;

    #[BlockInfo(fromCodepoint: 0x16AD0, toCodepoint: 0x16AFF, name: 'Bassa Vah', plane: Plane::Plane1)]
    case Bassa_Vah;

    #[BlockInfo(fromCodepoint: 0x16B00, toCodepoint: 0x16B8F, name: 'Pahawh Hmong', plane: Plane::Plane1)]
    case Pahawh_Hmong;

    #[BlockInfo(fromCodepoint: 0x16D40, toCodepoint: 0x16D7F, name: 'Kirat Rai', plane: Plane::Plane1)]
    case Kirat_Rai;

    #[BlockInfo(fromCodepoint: 0x16E40, toCodepoint: 0x16E9F, name: 'Medefaidrin', plane: Plane::Plane1)]
    case Medefaidrin;

    #[BlockInfo(fromCodepoint: 0x16F00, toCodepoint: 0x16F9F, name: 'Miao', plane: Plane::Plane1)]
    case Miao;

    #[BlockInfo(fromCodepoint: 0x16FE0, toCodepoint: 0x16FFF, name: 'Ideographic Symbols and Punctuation', plane: Plane::Plane1)]
    case Ideographic_Symbols_and_Punctuation;

    #[BlockInfo(fromCodepoint: 0x17000, toCodepoint: 0x187FF, name: 'Tangut', plane: Plane::Plane1)]
    case Tangut;

    #[BlockInfo(fromCodepoint: 0x18800, toCodepoint: 0x18AFF, name: 'Tangut Components', plane: Plane::Plane1)]
    case Tangut_Components;

    #[BlockInfo(fromCodepoint: 0x18B00, toCodepoint: 0x18CFF, name: 'Khitan Small Script', plane: Plane::Plane1)]
    case Khitan_Small_Script;

    #[BlockInfo(fromCodepoint: 0x18D00, toCodepoint: 0x18D7F, name: 'Tangut Supplement', plane: Plane::Plane1)]
    case Tangut_Supplement;

    #[BlockInfo(fromCodepoint: 0x1AFF0, toCodepoint: 0x1AFFF, name: 'Kana Extended-B', plane: Plane::Plane1)]
    case Kana_ExtendedB;

    #[BlockInfo(fromCodepoint: 0x1B000, toCodepoint: 0x1B0FF, name: 'Kana Supplement', plane: Plane::Plane1)]
    case Kana_Supplement;

    #[BlockInfo(fromCodepoint: 0x1B100, toCodepoint: 0x1B12F, name: 'Kana Extended-A', plane: Plane::Plane1)]
    case Kana_ExtendedA;

    #[BlockInfo(fromCodepoint: 0x1B130, toCodepoint: 0x1B16F, name: 'Small Kana Extension', plane: Plane::Plane1)]
    case Small_Kana_Extension;

    #[BlockInfo(fromCodepoint: 0x1B170, toCodepoint: 0x1B2FF, name: 'Nushu', plane: Plane::Plane1)]
    case Nushu;

    #[BlockInfo(fromCodepoint: 0x1BC00, toCodepoint: 0x1BC9F, name: 'Duployan', plane: Plane::Plane1)]
    case Duployan;

    #[BlockInfo(fromCodepoint: 0x1BCA0, toCodepoint: 0x1BCAF, name: 'Shorthand Format Controls', plane: Plane::Plane1)]
    case Shorthand_Format_Controls;

    #[BlockInfo(fromCodepoint: 0x1CC00, toCodepoint: 0x1CEBF, name: 'Symbols for Legacy Computing Supplement', plane: Plane::Plane1)]
    case Symbols_for_Legacy_Computing_Supplement;

    #[BlockInfo(fromCodepoint: 0x1CF00, toCodepoint: 0x1CFCF, name: 'Znamenny Musical Notation', plane: Plane::Plane1)]
    case Znamenny_Musical_Notation;

    #[BlockInfo(fromCodepoint: 0x1D000, toCodepoint: 0x1D0FF, name: 'Byzantine Musical Symbols', plane: Plane::Plane1)]
    case Byzantine_Musical_Symbols;

    #[BlockInfo(fromCodepoint: 0x1D100, toCodepoint: 0x1D1FF, name: 'Musical Symbols', plane: Plane::Plane1)]
    case Musical_Symbols;

    #[BlockInfo(fromCodepoint: 0x1D200, toCodepoint: 0x1D24F, name: 'Ancient Greek Musical Notation', plane: Plane::Plane1)]
    case Ancient_Greek_Musical_Notation;

    #[BlockInfo(fromCodepoint: 0x1D2C0, toCodepoint: 0x1D2DF, name: 'Kaktovik Numerals', plane: Plane::Plane1)]
    case Kaktovik_Numerals;

    #[BlockInfo(fromCodepoint: 0x1D2E0, toCodepoint: 0x1D2FF, name: 'Mayan Numerals', plane: Plane::Plane1)]
    case Mayan_Numerals;

    #[BlockInfo(fromCodepoint: 0x1D300, toCodepoint: 0x1D35F, name: 'Tai Xuan Jing Symbols', plane: Plane::Plane1)]
    case Tai_Xuan_Jing_Symbols;

    #[BlockInfo(fromCodepoint: 0x1D360, toCodepoint: 0x1D37F, name: 'Counting Rod Numerals', plane: Plane::Plane1)]
    case Counting_Rod_Numerals;

    #[BlockInfo(fromCodepoint: 0x1D400, toCodepoint: 0x1D7FF, name: 'Mathematical Alphanumeric Symbols', plane: Plane::Plane1)]
    case Mathematical_Alphanumeric_Symbols;

    #[BlockInfo(fromCodepoint: 0x1D800, toCodepoint: 0x1DAAF, name: 'Sutton SignWriting', plane: Plane::Plane1)]
    case Sutton_SignWriting;

    #[BlockInfo(fromCodepoint: 0x1DF00, toCodepoint: 0x1DFFF, name: 'Latin Extended-G', plane: Plane::Plane1)]
    case Latin_ExtendedG;

    #[BlockInfo(fromCodepoint: 0x1E000, toCodepoint: 0x1E02F, name: 'Glagolitic Supplement', plane: Plane::Plane1)]
    case Glagolitic_Supplement;

    #[BlockInfo(fromCodepoint: 0x1E030, toCodepoint: 0x1E08F, name: 'Cyrillic Extended-D', plane: Plane::Plane1)]
    case Cyrillic_ExtendedD;

    #[BlockInfo(fromCodepoint: 0x1E100, toCodepoint: 0x1E14F, name: 'Nyiakeng Puachue Hmong', plane: Plane::Plane1)]
    case Nyiakeng_Puachue_Hmong;

    #[BlockInfo(fromCodepoint: 0x1E290, toCodepoint: 0x1E2BF, name: 'Toto', plane: Plane::Plane1)]
    case Toto;

    #[BlockInfo(fromCodepoint: 0x1E2C0, toCodepoint: 0x1E2FF, name: 'Wancho', plane: Plane::Plane1)]
    case Wancho;

    #[BlockInfo(fromCodepoint: 0x1E4D0, toCodepoint: 0x1E4FF, name: 'Nag Mundari', plane: Plane::Plane1)]
    case Nag_Mundari;

    #[BlockInfo(fromCodepoint: 0x1E5D0, toCodepoint: 0x1E5FF, name: 'Ol Onal', plane: Plane::Plane1)]
    case Ol_Onal;

    #[BlockInfo(fromCodepoint: 0x1E7E0, toCodepoint: 0x1E7FF, name: 'Ethiopic Extended-B', plane: Plane::Plane1)]
    case Ethiopic_ExtendedB;

    #[BlockInfo(fromCodepoint: 0x1E800, toCodepoint: 0x1E8DF, name: 'Mende Kikakui', plane: Plane::Plane1)]
    case Mende_Kikakui;

    #[BlockInfo(fromCodepoint: 0x1E900, toCodepoint: 0x1E95F, name: 'Adlam', plane: Plane::Plane1)]
    case Adlam;

    #[BlockInfo(fromCodepoint: 0x1EC70, toCodepoint: 0x1ECBF, name: 'Indic Siyaq Numbers', plane: Plane::Plane1)]
    case Indic_Siyaq_Numbers;

    #[BlockInfo(fromCodepoint: 0x1ED00, toCodepoint: 0x1ED4F, name: 'Ottoman Siyaq Numbers', plane: Plane::Plane1)]
    case Ottoman_Siyaq_Numbers;

    #[BlockInfo(fromCodepoint: 0x1EE00, toCodepoint: 0x1EEFF, name: 'Arabic Mathematical Alphabetic Symbols', plane: Plane::Plane1)]
    case Arabic_Mathematical_Alphabetic_Symbols;

    #[BlockInfo(fromCodepoint: 0x1F000, toCodepoint: 0x1F02F, name: 'Mahjong Tiles', plane: Plane::Plane1)]
    case Mahjong_Tiles;

    #[BlockInfo(fromCodepoint: 0x1F030, toCodepoint: 0x1F09F, name: 'Domino Tiles', plane: Plane::Plane1)]
    case Domino_Tiles;

    #[BlockInfo(fromCodepoint: 0x1F0A0, toCodepoint: 0x1F0FF, name: 'Playing Cards', plane: Plane::Plane1)]
    case Playing_Cards;

    #[BlockInfo(fromCodepoint: 0x1F100, toCodepoint: 0x1F1FF, name: 'Enclosed Alphanumeric Supplement', plane: Plane::Plane1)]
    case Enclosed_Alphanumeric_Supplement;

    #[BlockInfo(fromCodepoint: 0x1F200, toCodepoint: 0x1F2FF, name: 'Enclosed Ideographic Supplement', plane: Plane::Plane1)]
    case Enclosed_Ideographic_Supplement;

    #[BlockInfo(fromCodepoint: 0x1F300, toCodepoint: 0x1F5FF, name: 'Miscellaneous Symbols and Pictographs', plane: Plane::Plane1)]
    case Miscellaneous_Symbols_and_Pictographs;

    #[BlockInfo(fromCodepoint: 0x1F600, toCodepoint: 0x1F64F, name: 'Emoticons', plane: Plane::Plane1)]
    case Emoticons;

    #[BlockInfo(fromCodepoint: 0x1F650, toCodepoint: 0x1F67F, name: 'Ornamental Dingbats', plane: Plane::Plane1)]
    case Ornamental_Dingbats;

    #[BlockInfo(fromCodepoint: 0x1F680, toCodepoint: 0x1F6FF, name: 'Transport and Map Symbols', plane: Plane::Plane1)]
    case Transport_and_Map_Symbols;

    #[BlockInfo(fromCodepoint: 0x1F700, toCodepoint: 0x1F77F, name: 'Alchemical Symbols', plane: Plane::Plane1)]
    case Alchemical_Symbols;

    #[BlockInfo(fromCodepoint: 0x1F780, toCodepoint: 0x1F7FF, name: 'Geometric Shapes Extended', plane: Plane::Plane1)]
    case Geometric_Shapes_Extended;

    #[BlockInfo(fromCodepoint: 0x1F800, toCodepoint: 0x1F8FF, name: 'Supplemental Arrows-C', plane: Plane::Plane1)]
    case Supplemental_ArrowsC;

    #[BlockInfo(fromCodepoint: 0x1F900, toCodepoint: 0x1F9FF, name: 'Supplemental Symbols and Pictographs', plane: Plane::Plane1)]
    case Supplemental_Symbols_and_Pictographs;

    #[BlockInfo(fromCodepoint: 0x1FA00, toCodepoint: 0x1FA6F, name: 'Chess Symbols', plane: Plane::Plane1)]
    case Chess_Symbols;

    #[BlockInfo(fromCodepoint: 0x1FA70, toCodepoint: 0x1FAFF, name: 'Symbols and Pictographs Extended-A', plane: Plane::Plane1)]
    case Symbols_and_Pictographs_ExtendedA;

    #[BlockInfo(fromCodepoint: 0x1FB00, toCodepoint: 0x1FBFF, name: 'Symbols for Legacy Computing', plane: Plane::Plane1)]
    case Symbols_for_Legacy_Computing;

    // Blocks for plane 2 (Supplementary Ideographic Plane}

    #[BlockInfo(fromCodepoint: 0x20000, toCodepoint: 0x2A6DF, name: 'CJK Unified Ideographs Extension B', plane: Plane::Plane2)]
    case CJK_Unified_Ideographs_Extension_B;

    #[BlockInfo(fromCodepoint: 0x2A700, toCodepoint: 0x2B73F, name: 'CJK Unified Ideographs Extension C', plane: Plane::Plane2)]
    case CJK_Unified_Ideographs_Extension_C;

    #[BlockInfo(fromCodepoint: 0x2B740, toCodepoint: 0x2B81F, name: 'CJK Unified Ideographs Extension D', plane: Plane::Plane2)]
    case CJK_Unified_Ideographs_Extension_D;

    #[BlockInfo(fromCodepoint: 0x2B820, toCodepoint: 0x2CEAF, name: 'CJK Unified Ideographs Extension E', plane: Plane::Plane2)]
    case CJK_Unified_Ideographs_Extension_E;

    #[BlockInfo(fromCodepoint: 0x2CEB0, toCodepoint: 0x2EBEF, name: 'CJK Unified Ideographs Extension F', plane: Plane::Plane2)]
    case CJK_Unified_Ideographs_Extension_F;

    #[BlockInfo(fromCodepoint: 0x2EBF0, toCodepoint: 0x2EE5F, name: 'CJK Unified Ideographs Extension I', plane: Plane::Plane2)]
    case CJK_Unified_Ideographs_Extension_I;

    #[BlockInfo(fromCodepoint: 0x2F800, toCodepoint: 0x2FA1F, name: 'CJK Compatibility Ideographs Supplement', plane: Plane::Plane2)]
    case CJK_Compatibility_Ideographs_Supplement;

    // Blocks for plane 3 (Tertiary Ideographic Plane}

    #[BlockInfo(fromCodepoint: 0x30000, toCodepoint: 0x3134F, name: 'CJK Unified Ideographs Extension G', plane: Plane::Plane3)]
    case CJK_Unified_Ideographs_Extension_G;

    #[BlockInfo(fromCodepoint: 0x31350, toCodepoint: 0x323AF, name: 'CJK Unified Ideographs Extension H', plane: Plane::Plane3)]
    case CJK_Unified_Ideographs_Extension_H;

    // Blocks for plane 14 (Supplementary Special-purpose Plane}

    #[BlockInfo(fromCodepoint: 0xE0000, toCodepoint: 0xE007F, name: 'Tags', plane: Plane::Plane14)]
    case Tags;

    #[BlockInfo(fromCodepoint: 0xE0100, toCodepoint: 0xE01EF, name: 'Variation Selectors Supplement', plane: Plane::Plane14)]
    case Variation_Selectors_Supplement;

    // Blocks for plane 15 (Supplementary Private Use Area-A}

    #[BlockInfo(fromCodepoint: 0xF0000, toCodepoint: 0xFFFFF, name: 'Supplementary Private Use Area-A', plane: Plane::Plane15)]
    case Supplementary_Private_Use_AreaA;

    // Blocks for plane 16 (Supplementary Private Use Area-B}

    #[BlockInfo(fromCodepoint: 0x100000, toCodepoint: 0x10FFFF, name: 'Supplementary Private Use Area-B', plane: Plane::Plane16)]
    case Supplementary_Private_Use_AreaB;
}
